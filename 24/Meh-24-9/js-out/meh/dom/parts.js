import { defs } from "./defs.js";
import * as nodet from "./nodet.js";
export const create_place = (ce, df, def) => (next_place(ce, df, def, 0));
const next_place = (ce, df, def, pos) => {
    const cur = def[pos];
    if (cur instanceof defs.Place) {
        pos++;
        if (cur instanceof defs.Each) {
            return new EachPlace(ce, df, cur, def, pos);
        }
        return;
    }
    if (cur !== undefined) {
        return new StaticPlace(ce, df, def, pos);
    }
};
/* */
export class Place {
    next;
    make_part(df, pdef) {
        let is_period = false;
        if (pdef instanceof nodet.Nodet) {
            pdef.node && df.appendChild(pdef.node);
            return pdef;
        }
        else if (pdef instanceof Node) {
            df.appendChild(pdef);
            return pdef;
        }
        else if (!(pdef instanceof defs.Place)) {
            const text = new nodet.Text(pdef);
            text.node && df.appendChild(text.node);
            return text;
        }
    }
    destruct() { }
}
class StaticPlace extends Place {
    constructor(ce, df, def, pos) {
        super();
        while (pos < def.length) {
            const pdef = def[pos];
            if (!this.make_part(df, pdef)) {
                break;
            }
            pos++;
        }
        this.next = next_place(ce, df, def, pos);
    }
}
class EachPlace extends Place {
    df;
    def;
    parts = new Map;
    constructor(ce, df, def, parts_def, pos) {
        super();
        this.df = df;
        this.def = def;
        def.source.add_ref(this);
        false && def.source.orders.forEach(order => this.make_part(df, def.create_node(order)));
        this.next = next_place(ce, df, parts_def, pos);
    }
    add({ src, start, next }) {
        for (let pos = start; pos < next; pos++) {
            const order = src.orders[pos];
            if (this.parts.has(order))
                return;
            const part = this.make_part(this.df, this.def.create_node(order));
            part && this.parts.set(order, part);
        }
    }
    remove(range) { }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFydHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90cy1zcmMvbWVoL2RvbS9wYXJ0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sS0FBSyxLQUFLLE1BQU0sWUFBWSxDQUFDO0FBRXBDLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FDekIsQ0FDQyxFQUFZLEVBQ1osRUFBcUIsRUFDckIsR0FBZ0IsRUFFRyxFQUFFLENBQ3RCLENBQ0MsVUFBVSxDQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBRSxDQUM1QixDQUFDO0FBRUYsTUFBTSxVQUFVLEdBQ2hCLENBQ0MsRUFBWSxFQUNaLEVBQXFCLEVBQ3JCLEdBQWdCLEVBQ2hCLEdBQVksRUFFTyxFQUFFO0lBRXJCLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBRSxHQUFHLENBQUUsQ0FBQztJQUV2QixJQUFJLEdBQUcsWUFBWSxJQUFJLENBQUMsS0FBSyxFQUM3QixDQUFDO1FBQ0EsR0FBRyxFQUFHLENBQUU7UUFFUixJQUFJLEdBQUcsWUFBWSxJQUFJLENBQUMsSUFBSSxFQUM1QixDQUFDO1lBQ0EsT0FBTyxJQUFJLFNBQVMsQ0FBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFFLENBQUM7UUFDL0MsQ0FBQztRQUVELE9BQVE7SUFDVCxDQUFDO0lBRUQsSUFBSSxHQUFHLEtBQUssU0FBUyxFQUNyQixDQUFDO1FBQ0EsT0FBTyxJQUFJLFdBQVcsQ0FBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUUsQ0FBQztJQUM1QyxDQUFDO0FBQ0YsQ0FBQyxDQUFDO0FBRUYsS0FBSztBQUdMLE1BQU0sT0FBTyxLQUFLO0lBRVAsSUFBSSxDQUFZO0lBRWhCLFNBQVMsQ0FFbEIsRUFBcUIsRUFDckIsSUFBZ0I7UUFJ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