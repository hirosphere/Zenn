import { Leaf, leaf, ef, Lian, defs } from "../meh/index.js";
import { sitepub } from "./sitepub_all_utf8.js";
import { Range } from "../range.js";
const log = console.log;
const clip = (value, min, max) => Math.max(min, Math.min(max, value));
const pxRatio = 100;
// Model //
var Model;
(function (Model) {
    class Map {
        // パラメータ //
        current = new Leaf(null);
        zoom;
        center;
        //  //
        hover = new Leaf(null);
        hoverInfo = new Leaf.String("");
        currentInfo = new Leaf.String("");
        hoverList = new Lian;
        currentList = new Lian;
        scrollCSS = leaf.string("");
        zoomCSS = leaf.string("");
        // 固定値 //
        lat = { max: 45.5132, min: 24.3413 };
        long = { max: 145.8026, min: 123.7798 };
        //  //
        constructor() {
            const rel = () => this.update();
            this.zoom = new Leaf.Number(5, { rel });
            this.center = new Leaf({ lat: 36.0, long: 139.0 }, { rel });
            this.hover.ref(() => this.updateHover());
            this.current.ref((newItem, oldItem) => this.updateCurrent(newItem, oldItem));
            this.hoverList.add(Site.list[555]);
            this.hoverList.add(Site.list[777]);
            rel();
        }
        update() {
            const scale = this.zoomScale;
            const tlx = -this.longToPx(this.center.value.long) + "px";
            const tly = -this.latToPx(this.center.value.lat) + "px";
            this.scrollCSS.value = `translate( ${tlx}, ${tly} )`;
            this.zoomCSS.value = `scale( ${scale}, ${scale} )`;
        }
        updateHover() {
            const site = this.hover.value;
            this.hoverInfo.value = Site.info(site);
            site && this.hoverList.add(site);
        }
        updateCurrent(newItem, oldItem) {
            this.currentInfo.value = Site.info(newItem);
            oldItem && (oldItem.selected.value = false);
            newItem && (newItem.selected.value = true);
        }
        cssPos(site) {
            const left = this.longToPx(site.long) + "px";
            const top = this.latToPx(site.lat) + "px";
            return { left, top };
        }
        latToPx(lat) { return (this.lat.max - lat) * pxRatio; }
        longToPx(long) { return (long - this.long.min) * pxRatio; }
        get zoomScale() { return 0.1 * Math.pow(10, this.zoom.value / 5); }
    }
    Model.Map = Map;
    //
    class Site {
        src;
        selected = leaf.boolean(false);
        constructor(src) {
            this.src = src.split(",");
        }
        get code() { return this.src[0]; }
        get name() { return this.src[1]; }
        get nameR() { return this.src[2]; }
        get lat() { return Number(this.src[3]); }
        get long() { return Number(this.src[4]); }
        get elev() { return Number(this.src[5]); }
        get depth() { return Number(this.src[6]); }
        static info(site) {
            return site && `${site.code} ${site.name} ${site.nameR}` || "-";
        }
        static list = sitepub.split("\n").map(csv => new Site(csv));
    }
    Model.Site = Site;
    ;
    log("sitecount", Site.list.length);
})(Model || (Model = {}));
// UI //
// . site . //
const { div, h2, h3, textarea, p, span } = ef;
const Site = (site, map) => {
    const { left, top } = map.cssPos(site);
    return div({
        class: ["map-site", { selected: site.selected }],
        style: { left, top },
        attrs: { selected: site.selected },
        acts: {
            mouseover() { map.hover.value = site; },
            click() { map.current.value = site; },
        }
    });
};
// . frame . //
// .. zoom scroll work .. //
class ScrollWork {
    map;
    recx;
    recy;
    touchMon = new Leaf.String("");
    mousemon = new Leaf.String("");
    constructor(map) {
        this.map = map;
    }
    mon(name, x, y) {
        this.mousemon.value = `${name} ${x} ${y}`;
    }
    mousedown = (ev) => {
        if (ev.buttons & 1)
            this.start(ev);
        this.mon("down", ev.pageX, ev.pageY);
    };
    mousemove = (ev) => {
        this.mon("move", ev.pageX, ev.pageY);
        if (ev.buttons & 1)
            this.scroll(ev);
    };
    mouseup = (ev) => {
        this.mon("up  ", ev.pageX, ev.pageY);
    };
    touchstart = (ev) => {
        const t0 = ev.touches[0];
        this.touchMon.value = `start ${ev.touches.length} ${t0.clientX} ${t0.clientY} }`;
    };
    touchmove = (ev) => {
        const t0 = ev.touches[0];
        this.touchMon.value = `move  ${ev.touches.length} ${t0.clientX} ${t0.clientY} }`;
    };
    touchend = (ev) => {
        const t0 = ev.touches[0];
        this.touchMon.value = `end   ${ev.touches.length} }`;
        // if( ev.cancelable ) ev.preventDefault();
    };
    //  //
    start(ev) {
        this.recx = ev.pageX;
        this.recy = ev.pageY;
        ev.preventDefault();
    }
    scroll(ev) {
        const center = this.map.center.value;
        const scale = 0.01 / this.map.zoomScale;
        const deltaX = this.delta(ev.pageX, this.recx);
        this.recx = ev.pageX;
        const deltaY = this.delta(ev.pageY, this.recy);
        this.recy = ev.pageY;
        const long = clip(center.long - deltaX * scale, this.map.long.min, this.map.long.max);
        const lat = clip(center.lat + deltaY * scale, this.map.lat.min, this.map.lat.max);
        this.map.center.value = { lat, long };
    }
    delta(mouse, rec) {
        return rec != null ? (mouse - rec) : 0;
    }
}
// .. zoom scroll work .. //
class ZoomWork {
    map;
    wheelzoom;
    wheelMon = new Leaf.String("");
    constructor(map) {
        this.map = map;
        this.wheelzoom = map.zoom.value;
    }
    wheel = (ev) => {
        this.wheelMon.value = `${ev.deltaX} ${ev.deltaY}`;
        const zoom = this.wheelzoom + ev.deltaY * -0.05;
        this.wheelzoom = Math.min(10, Math.max(0, zoom));
        this.map.zoom.value = Math.round(this.wheelzoom);
        ev.preventDefault();
    };
}
// .. ui .. //
const MapFrame = (model, zoom, scr) => {
    const content = div({
        class: "map-content",
        style: { transform: model.scrollCSS }
    }, ...Model.Site.list.map(siteInfo => Site(siteInfo, model)));
    const zoomFrame = div({
        class: "map-zoom",
        style: { transform: model.zoomCSS }
    }, content);
    const { wheel } = zoom;
    const { mouseup, touchstart, touchmove, touchend } = scr;
    return div({
        class: "map-frame",
        acts: { mouseup, touchend },
        actActs: { wheel, touchstart, touchmove, },
        optActs: {
            mousedown: [scr.mousedown, { passive: false, capture: true }],
            mousemove: [scr.mousemove, { passive: false, capture: true }]
        },
    }, div(), div(), div(), zoomFrame);
};
// main ui //
export const Map = () => {
    const model = new Model.Map;
    const lianMon = new Leaf.String("");
    const zoom = new ZoomWork(model);
    const scr = new ScrollWork(model);
    model.hoverList.ref(() => {
        const lian = model.hoverList;
        const list = lian.slice(-130).map(site => `${site.name}`);
        lianMon.value = "" + lian.length + " " + list.join(" ");
    });
    return div({ class: "map applet" }, h2("EQ Site Map"), div(div({ class: "map-cur-site" }, model.currentInfo), MapFrame(model, zoom, scr), div({ class: "hover-info" }, model.hoverInfo), div(Range.UI({ title: "拡大", value: model.zoom, max: 10 }))), div(div("wheel", " ", zoom.wheelMon), div("mouse", " ", scr.mousemon), div("touch", " ", scr.touchMon)), div(h3("ホバー履歴"), div(
    //defs.ap( model.hoverList, item => { log( item.code ); return span( "span" ) } ),
    defs.ap(model.hoverList, item => item.name + " "), defs.ap([1, 2, 3], item => span(item))), textarea({ props: { value: lianMon }, style: { width: "100%", height: "20em", lineHeight: "1.4em" } })));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMtc3JjL2VxL21hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3BDLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFFeEIsTUFBTSxJQUFJLEdBQUcsQ0FBRSxLQUFjLEVBQUUsR0FBWSxFQUFFLEdBQVksRUFBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBRSxHQUFHLEVBQUUsS0FBSyxDQUFFLENBQUUsQ0FBQztBQUd2RyxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUM7QUFFcEIsV0FBVztBQUVYLElBQVUsS0FBSyxDQWlIZDtBQWpIRCxXQUFVLEtBQUs7SUFFZCxNQUFhLEdBQUc7UUFFZixXQUFXO1FBRVgsT0FBTyxHQUFHLElBQUksSUFBSSxDQUFtQixJQUFJLENBQUUsQ0FBQztRQUM1QyxJQUFJLENBQWU7UUFDbkIsTUFBTSxDQUFvQjtRQUUxQixNQUFNO1FBRU4sS0FBSyxHQUFHLElBQUksSUFBSSxDQUFtQixJQUFJLENBQUUsQ0FBQztRQUMxQyxTQUFTLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQ2xDLFdBQVcsR0FBRyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUUsRUFBRSxDQUFFLENBQUM7UUFFcEMsU0FBUyxHQUFHLElBQUksSUFBYSxDQUFFO1FBQy9CLFdBQVcsR0FBRyxJQUFJLElBQWEsQ0FBRTtRQUVqQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBRSxFQUFFLENBQUUsQ0FBQztRQUM5QixPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBRSxFQUFFLENBQUUsQ0FBQztRQUU1QixTQUFTO1FBRVQsR0FBRyxHQUFHLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLENBQUM7UUFDckMsSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLENBQUM7UUFHeEMsTUFBTTtRQUVOO1lBRUMsTUFBTSxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBRWhDLElBQUksQ0FBQyxJQUFJLEdBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFFLENBQUM7WUFDM0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBZSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUUsQ0FBQztZQUUzRSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUUsQ0FBQztZQUMzQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBRSxDQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBRSxDQUFFLENBQUM7WUFFbkYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUUsSUFBSSxDQUFDLElBQUksQ0FBRSxHQUFHLENBQUUsQ0FBRSxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFFLElBQUksQ0FBQyxJQUFJLENBQUUsR0FBRyxDQUFFLENBQUUsQ0FBQztZQUV2QyxHQUFHLEVBQUUsQ0FBQztRQUNQLENBQUM7UUFFRCxNQUFNO1lBRUwsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUM3QixNQUFNLEdBQUcsR0FBRyxDQUFFLElBQUksQ0FBQyxRQUFRLENBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFFLEdBQUcsSUFBSSxDQUFDO1lBQzdELE1BQU0sR0FBRyxHQUFHLENBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUUsR0FBRyxJQUFJLENBQUM7WUFFM0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsY0FBZSxHQUFJLEtBQU0sR0FBSSxJQUFJLENBQUM7WUFDekQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsVUFBVyxLQUFNLEtBQU0sS0FBTSxJQUFJLENBQUM7UUFDeEQsQ0FBQztRQUVELFdBQVc7WUFFVixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztZQUM5QixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFFLElBQUksQ0FBRSxDQUFDO1lBQ3pDLElBQUksSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBRSxJQUFJLENBQUUsQ0FBQztRQUNwQyxDQUFDO1FBRUQsYUFBYSxDQUFFLE9BQXFCLEVBQUUsT0FBdUI7WUFFNUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBRSxPQUFPLENBQUUsQ0FBQztZQUU5QyxPQUFPLElBQUksQ0FBRSxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUUsQ0FBQztZQUM5QyxPQUFPLElBQUksQ0FBRSxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUUsQ0FBQztRQUM5QyxDQUFDO1FBRUQsTUFBTSxDQUFFLElBQVc7WUFFbEIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBRSxJQUFJLENBQUMsSUFBSSxDQUFFLEdBQUcsSUFBSSxDQUFDO1lBQy9DLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBRSxHQUFHLElBQUksQ0FBQztZQUM1QyxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLENBQUM7UUFFRCxPQUFPLENBQUUsR0FBWSxJQUFLLE9BQU8sQ0FBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUUsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3BFLFFBQVEsQ0FBRSxJQUFhLElBQUssT0FBTyxDQUFFLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBRSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFeEUsSUFBSSxTQUFTLEtBQUssT0FBTyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ3JFO0lBaEZZLFNBQUcsTUFnRmYsQ0FBQTtJQUVELEVBQUU7SUFFRixNQUFhLElBQUk7UUFFaEIsR0FBRyxDQUFZO1FBQ2YsUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUUsS0FBSyxDQUFFLENBQUM7UUFFakMsWUFBYSxHQUFZO1lBRXhCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBRSxHQUFHLENBQUUsQ0FBQztRQUM3QixDQUFDO1FBRUQsSUFBSSxJQUFJLEtBQWMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFFLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQztRQUM3QyxJQUFJLElBQUksS0FBYyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUUsQ0FBQyxDQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzdDLElBQUksS0FBSyxLQUFjLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBRSxDQUFDLENBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUMsSUFBSSxHQUFHLEtBQWMsT0FBTyxNQUFNLENBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBRSxDQUFDLENBQUUsQ0FBRSxDQUFDLENBQUMsQ0FBQztRQUN0RCxJQUFJLElBQUksS0FBYyxPQUFPLE1BQU0sQ0FBRSxJQUFJLENBQUMsR0FBRyxDQUFFLENBQUMsQ0FBRSxDQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3ZELElBQUksSUFBSSxLQUFjLE9BQU8sTUFBTSxDQUFFLElBQUksQ0FBQyxHQUFHLENBQUUsQ0FBQyxDQUFFLENBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdkQsSUFBSSxLQUFLLEtBQWMsT0FBTyxNQUFNLENBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBRSxDQUFDLENBQUUsQ0FBRSxDQUFDLENBQUMsQ0FBQztRQUV4RCxNQUFNLENBQUMsSUFBSSxDQUFFLElBQWtCO1lBRTlCLE9BQU8sSUFBSSxJQUFLLEdBQUksSUFBSSxDQUFDLElBQUssSUFBSyxJQUFJLENBQUMsSUFBSyxJQUFLLElBQUksQ0FBQyxLQUFNLEVBQUUsSUFBSyxHQUFHLENBQUE7UUFDeEUsQ0FBQztRQUVELE1BQU0sQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBRSxJQUFJLENBQUUsQ0FBQyxHQUFHLENBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksQ0FBRSxHQUFHLENBQUUsQ0FBRSxDQUFDOztJQXZCdEQsVUFBSSxPQXdCaEIsQ0FBQTtJQUFBLENBQUM7SUFFRixHQUFHLENBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFFLENBQUE7QUFDckMsQ0FBQyxFQWpIUyxLQUFLLEtBQUwsS0FBSyxRQWlIZDtBQUdELFFBQVE7QUFFUixjQUFjO0FBQ2QsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBRTlDLE1BQU0sSUFBSSxHQUFHLENBQUUsSUFBaUIsRUFBRSxHQUFlLEVBQUcsRUFBRTtJQUVyRCxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUUsSUFBSSxDQUFFLENBQUM7SUFFekMsT0FBTyxHQUFHLENBRVQ7UUFDQyxLQUFLLEVBQUUsQ0FBRSxVQUFVLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFFO1FBQ2xELEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7UUFDcEIsS0FBSyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDbEMsSUFBSSxFQUNKO1lBQ0MsU0FBUyxLQUFLLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdkMsS0FBSyxLQUFLLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDckM7S0FDRCxDQUNELENBQUM7QUFDSCxDQUFDLENBQUM7QUFFRixlQUFlO0FBRWYsNEJBQTRCO0FBRTVCLE1BQU0sVUFBVTtJQVFRO0lBTnZCLElBQUksQ0FBYTtJQUNqQixJQUFJLENBQWE7SUFFakIsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBRSxFQUFFLENBQUUsQ0FBQztJQUNqQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLEVBQUUsQ0FBRSxDQUFDO0lBRWpDLFlBQXVCLEdBQWU7UUFBZixRQUFHLEdBQUgsR0FBRyxDQUFZO0lBRXRDLENBQUM7SUFFRCxHQUFHLENBQUUsSUFBYSxFQUFFLENBQVUsRUFBRSxDQUFVO1FBRXpDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLEdBQUksSUFBSyxJQUFLLENBQUUsSUFBSyxDQUFFLEVBQUUsQ0FBQztJQUNqRCxDQUFDO0lBRUQsU0FBUyxHQUFHLENBQUUsRUFBZSxFQUFHLEVBQUU7UUFFakMsSUFBSSxFQUFFLENBQUMsT0FBTyxHQUFHLENBQUM7WUFBSSxJQUFJLENBQUMsS0FBSyxDQUFFLEVBQUUsQ0FBRSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxHQUFHLENBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBRSxDQUFDO0lBQ3hDLENBQUMsQ0FBQztJQUVGLFNBQVMsR0FBRyxDQUFFLEVBQWUsRUFBRyxFQUFFO1FBRWpDLElBQUksQ0FBQyxHQUFHLENBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBRSxDQUFDO1FBQ3ZDLElBQUksRUFBRSxDQUFDLE9BQU8sR0FBRyxDQUFDO1lBQUksSUFBSSxDQUFDLE1BQU0sQ0FBRSxFQUFFLENBQUUsQ0FBQztJQUN6QyxDQUFDLENBQUM7SUFFRixPQUFPLEdBQUcsQ0FBRSxFQUFlLEVBQUcsRUFBRTtRQUUvQixJQUFJLENBQUMsR0FBRyxDQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUUsQ0FBQztJQUN4QyxDQUFDLENBQUM7SUFFRixVQUFVLEdBQUcsQ0FBRSxFQUFlLEVBQUcsRUFBRTtRQUVsQyxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFFLENBQUMsQ0FBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLFNBQVUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFPLElBQUssRUFBRSxDQUFDLE9BQVEsSUFBSyxFQUFFLENBQUMsT0FBUSxJQUFJLENBQUM7SUFDeEYsQ0FBQyxDQUFDO0lBRUYsU0FBUyxHQUFHLENBQUUsRUFBZSxFQUFHLEVBQUU7UUFFakMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBRSxDQUFDLENBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxTQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTyxJQUFLLEVBQUUsQ0FBQyxPQUFRLElBQUssRUFBRSxDQUFDLE9BQVEsSUFBSSxDQUFDO0lBQ3hGLENBQUMsQ0FBQztJQUVGLFFBQVEsR0FBRyxDQUFFLEVBQWUsRUFBRyxFQUFFO1FBRWhDLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUUsQ0FBQyxDQUFFLENBQUM7UUFFM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsU0FBVSxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU8sSUFBSSxDQUFDO1FBRXZELDJDQUEyQztJQUM1QyxDQUFDLENBQUM7SUFFRixNQUFNO0lBRU4sS0FBSyxDQUFFLEVBQWU7UUFFckIsSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFBO1FBQ3BCLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQztRQUNyQixFQUFFLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVELE1BQU0sQ0FBRSxFQUFlO1FBRXRCLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNyQyxNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUM7UUFFeEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBRSxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUUsQ0FBQztRQUNqRCxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUM7UUFFckIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBRSxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUUsQ0FBQztRQUNqRCxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUM7UUFFckIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUVoQixNQUFNLENBQUMsSUFBSSxHQUFHLE1BQU0sR0FBRyxLQUFLLEVBQzVCLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFDakIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUNqQixDQUFDO1FBRUYsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUVmLE1BQU0sQ0FBQyxHQUFHLEdBQUcsTUFBTSxHQUFHLEtBQUssRUFDM0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUNoQixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQ2hCLENBQUM7UUFFRixJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVELEtBQUssQ0FBRSxLQUFjLEVBQUUsR0FBYztRQUVwQyxPQUFPLEdBQUcsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUUsS0FBSyxHQUFHLEdBQUcsQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUMsQ0FBQztDQUNEO0FBRUQsNEJBQTRCO0FBRTVCLE1BQU0sUUFBUTtJQU1VO0lBSnZCLFNBQVMsQ0FBVztJQUVwQixRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLEVBQUUsQ0FBRSxDQUFDO0lBRWpDLFlBQXVCLEdBQWU7UUFBZixRQUFHLEdBQUgsR0FBRyxDQUFZO1FBRXJDLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDakMsQ0FBQztJQUVELEtBQUssR0FBRyxDQUFFLEVBQWUsRUFBRyxFQUFFO1FBRTdCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLEdBQUksRUFBRSxDQUFDLE1BQU8sSUFBSyxFQUFFLENBQUMsTUFBTyxFQUFFLENBQUM7UUFFdEQsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDO1FBQ2hELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBRSxDQUFDLEVBQUUsSUFBSSxDQUFFLENBQUUsQ0FBQztRQUNyRCxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBRSxJQUFJLENBQUMsU0FBUyxDQUFFLENBQUM7UUFFbkQsRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3JCLENBQUMsQ0FBQztDQUNGO0FBRUQsY0FBYztBQUVkLE1BQU0sUUFBUSxHQUFHLENBQUUsS0FBaUIsRUFBRSxJQUFlLEVBQUUsR0FBZ0IsRUFBRyxFQUFFO0lBRTNFLE1BQU0sT0FBTyxHQUFHLEdBQUcsQ0FFbEI7UUFDQyxLQUFLLEVBQUUsYUFBYTtRQUNwQixLQUFLLEVBQUUsRUFBRSxTQUFTLEVBQUUsS0FBSyxDQUFDLFNBQVMsRUFBRTtLQUNyQyxFQUVELEdBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFFLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFFLFFBQVEsRUFBRSxLQUFLLENBQUUsQ0FBRSxDQUM5RCxDQUFDO0lBRUYsTUFBTSxTQUFTLEdBQUcsR0FBRyxDQUVwQjtRQUNDLEtBQUssRUFBRSxVQUFVO1FBQ2pCLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFO0tBQ25DLEVBRUQsT0FBTyxDQUNQLENBQUM7SUFHRixNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsSUFBSSxDQUFDO0lBQ3ZCLE1BQU0sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsR0FBRyxHQUFHLENBQUM7SUFFekQsT0FBTyxHQUFHLENBRVQ7UUFDQyxLQUFLLEVBQUUsV0FBVztRQUNsQixJQUFJLEVBQUUsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFO1FBQzNCLE9BQU8sRUFBRSxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsU0FBUyxHQUFHO1FBQzFDLE9BQU8sRUFDUDtZQUNDLFNBQVMsRUFBRSxDQUFFLEdBQUcsQ0FBQyxTQUFTLEVBQUUsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBRTtZQUMvRCxTQUFTLEVBQUUsQ0FBRSxHQUFHLENBQUMsU0FBUyxFQUFFLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUU7U0FDL0Q7S0FDRCxFQUVELEdBQUcsRUFBRSxFQUNMLEdBQUcsRUFBRSxFQUNMLEdBQUcsRUFBRSxFQUNMLFNBQVMsQ0FDVCxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBR0YsYUFBYTtBQUViLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxHQUFHLEVBQUU7SUFFdkIsTUFBTSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQzVCLE1BQU0sT0FBTyxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBRSxFQUFFLENBQUUsQ0FBQztJQUN0QyxNQUFNLElBQUksR0FBRyxJQUFJLFFBQVEsQ0FBRSxLQUFLLENBQUUsQ0FBQztJQUNuQyxNQUFNLEdBQUcsR0FBRyxJQUFJLFVBQVUsQ0FBRSxLQUFLLENBQUUsQ0FBQztJQUVwQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FFbEIsR0FBRyxFQUFFO1FBRUosTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQztRQUM3QixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFFLENBQUMsR0FBRyxDQUFFLENBQUMsR0FBRyxDQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBSSxJQUFJLENBQUMsSUFBSyxFQUFFLENBQUUsQ0FBQztRQUNoRSxPQUFPLENBQUMsS0FBSyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFFLEdBQUcsQ0FBQyxDQUFBO0lBQ3pELENBQUMsQ0FDRCxDQUFDO0lBRUYsT0FBTyxHQUFHLENBRVQsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLEVBRXZCLEVBQUUsQ0FBRSxhQUFhLENBQUUsRUFFbkIsR0FBRyxDQUVGLEdBQUcsQ0FBRSxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUUsRUFBRSxLQUFLLENBQUMsV0FBVyxDQUFFLEVBQ25ELFFBQVEsQ0FBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBRSxFQUM1QixHQUFHLENBQUUsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBRSxFQUMvQyxHQUFHLENBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxDQUFFLENBQUUsQ0FDOUQsRUFFRCxHQUFHLENBRUYsR0FBRyxDQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBRSxFQUNsQyxHQUFHLENBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFFLEVBQ2pDLEdBQUcsQ0FBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUUsQ0FDakMsRUFFRCxHQUFHLENBRUYsRUFBRSxDQUFFLE9BQU8sQ0FBRSxFQUNiLEdBQUc7SUFFRixrRkFBa0Y7SUFDbEYsSUFBSSxDQUFDLEVBQUUsQ0FBRSxLQUFLLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUUsRUFDbkQsSUFBSSxDQUFDLEVBQUUsQ0FBRSxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFFLENBQUUsQ0FDNUMsRUFDRCxRQUFRLENBRVAsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUM1RixDQUNELENBQ0QsQ0FBQztBQUNILENBQUMsQ0FBQSJ9