import { defs } from "./defs.js";
import { bindText } from "./compo.js";
const log = console.log;
// part def reader //
class Reader {
    parts;
    index = 0;
    constructor(parts) {
        this.parts = parts;
    }
    get cur() { return this.parts[this.index]; }
    get next() { return this.parts[this.index++]; }
    get hasnext() { return this.parts[this.index] != null; }
    get curisdyn() { return this.cur instanceof defs.ArrayParts; }
    get nextdyn() {
        const cur = this.cur;
        if (cur instanceof defs.ArrayParts) {
            this.index++;
            return cur;
        }
    }
}
//  //
export class Parts {
    compo;
    ce;
    static create(compo, ce, parts) {
        const rd = new Reader(parts);
        return new StaticParts(compo, ce, rd);
    }
    constructor(compo, ce) {
        this.compo = compo;
        this.ce = ce;
    }
    //  //
    createPart(def) {
        if (typeof def == "object" && "isElement" in def) {
            return this.compo.createElement(def, this.ce);
        }
        const n = document.createTextNode("");
        bindText(n, "nodeValue", def, this.compo.refs);
        this.ce.appendChild(n);
        return n;
    }
    delete() { }
}
// static parts //
export class StaticParts extends Parts {
    next;
    prev;
    constructor(compo, ce, rd) {
        super(compo, ce);
        while (rd.hasnext) {
            const dyn = rd.nextdyn;
            if (dyn) {
                this.next = new DynamicParts(compo, ce, dyn, rd);
                break;
            }
            const node = this.lastnode = this.createPart(rd.next);
            this.firstnode = this.firstnode || node;
        }
    }
    //  //
    lastnode;
    firstnode;
    //  //
    //  //
    delete() {
        this;
    }
}
//  dynamic parts //
class DynamicParts extends Parts {
    constructor(compo, ce, def, rd) {
        log("dyn");
        super(compo, ce);
        if (def.source instanceof Array) {
            def.source.forEach(part => this.createPart(part));
        }
    }
    update = (start, remove, add) => {
        log("DynParts update", start, remove, add);
    };
}
function last(arr) {
    return arr[arr.length - 1];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFydHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90cy1zcmMvbWVoL2RvbS9wYXJ0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBYSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFHakQsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQztBQUV4QixxQkFBcUI7QUFFckIsTUFBTSxNQUFNO0lBR1U7SUFEYixLQUFLLEdBQVksQ0FBQyxDQUFDO0lBQzNCLFlBQXFCLEtBQW1CO1FBQW5CLFVBQUssR0FBTCxLQUFLLENBQWM7SUFBRyxDQUFDO0lBRTVDLElBQUksR0FBRyxLQUE2QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBRSxDQUFDLENBQUMsQ0FBQztJQUN0RSxJQUFJLElBQUksS0FBaUIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFFLElBQUksQ0FBQyxLQUFLLEVBQUcsQ0FBRSxDQUFDLENBQUMsQ0FBQztJQUM5RCxJQUFJLE9BQU8sS0FBZSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBRSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDcEUsSUFBSSxRQUFRLEtBQWUsT0FBTyxJQUFJLENBQUMsR0FBRyxZQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBRXhFLElBQUksT0FBTztRQUVWLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7UUFDckIsSUFBSSxHQUFHLFlBQVksSUFBSSxDQUFDLFVBQVUsRUFDbEM7WUFDQyxJQUFJLENBQUMsS0FBSyxFQUFHLENBQUM7WUFDZCxPQUFPLEdBQUcsQ0FBQztTQUNYO0lBQ0YsQ0FBQztDQUNEO0FBR0QsTUFBTTtBQUVOLE1BQU0sT0FBTyxLQUFLO0lBUU07SUFBNkI7SUFO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