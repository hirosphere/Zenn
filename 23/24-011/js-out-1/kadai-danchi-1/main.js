import { dom, ef, each, root, log } from "../meh/index.js";
const ents = Object.entries;
log("kadai-danchi-1 main");
const App = async () => {
    const params = new URLSearchParams(location.search);
    const roomindex = params.get("room") ?? "";
    const room = danchi.rooms[roomindex];
    log("room", roomindex, room);
    if (room) {
        try {
            const module = await import(room.mod_path);
            const Page = module.default;
            log("dymport", Page);
            if (Page)
                return Page(room.index);
        }
        catch (err) {
            log(err);
        }
    }
    return DanchiMap(params);
};
const DanchiMap = (ps) => {
    Object.entries(ps).forEach(e => log("forEach", e));
    return ef.main({}, ef.h1("課題団地"), ef.h2("Meh"), ef.p("HTML Single Page App Framework"), ef.table(each(Array.from(ps.entries()), ([name, value]) => ef.tr(ef.td(name), ef.td(value)))), ef.section({ props: {}, attrs: {}, style: { display: "flex", gap: "1ex" } }, each(Object.keys(danchi.rooms).map(path => danchi.rooms[path]), room => Link(room))), ef.section(ef.textarea({ props: { value: "Danchi" } })));
};
const Link = (room) => {
    return ef.a({ attrs: { href: room?.link ?? "" }, style: {} }, room?.index ?? "---");
};
const unavailable = true;
const danchimapsrc = {
    "1": {
        "1": {
            "101": {},
            "102": {},
            "103": {},
            "104": {},
            "105": {},
        },
    },
};
class Node {
    index;
    path;
    constructor(index, con) {
        this.index = index;
        this.path = (con ? con.path + "-" : "") + index;
    }
}
class Room extends Node {
    constructor(index, src, con, rooms) {
        super(index, con);
        // log( this.path, "部屋" );
        this.link = `?room=${this.path}`;
        this.mod_path = `./${this.path.replace(/-/g, "/")}.js`;
        rooms[this.path] = this;
    }
    link;
    mod_path;
}
class Building extends Node {
    constructor(index, src, con, rooms) {
        super(index, con);
        // log( this.path, "棟" );
        for (const [pindex, psrc] of ents(src)) {
            this.parts[pindex] = new Room(pindex, psrc, this, rooms);
        }
    }
    parts = {};
}
class Block extends Node {
    constructor(index, src, rooms) {
        super(index);
        // log( this.path, "街区" );
        for (const [pindex, psrc] of ents(src)) {
            this.parts[pindex] = new Building(pindex, psrc, this, rooms);
        }
    }
    parts = {};
}
class Danchi {
    parts = {};
    constructor(src) {
        for (const [pindex, psrc] of ents(src)) {
            this.parts[pindex] = new Block(pindex, psrc, this.rooms);
        }
    }
    rooms = {};
}
const danchi = new Danchi(danchimapsrc);
dom.create(root, await App(), "body");
export const dummy = {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3RzLXNyYy9rYWRhaS1kYW5jaGktMS9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZSxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFeEUsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUU1QixHQUFHLENBQUUscUJBQXFCLENBQUUsQ0FBQztBQUk3QixNQUFNLEdBQUcsR0FBRyxLQUFLLElBQUksRUFBRTtJQUV0QixNQUFNLE1BQU0sR0FBRyxJQUFJLGVBQWUsQ0FBRSxRQUFRLENBQUMsTUFBTSxDQUFFLENBQUM7SUFFdEQsTUFBTSxTQUFTLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBRSxNQUFNLENBQUUsSUFBSSxFQUFFLENBQUM7SUFDN0MsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBRSxTQUFTLENBQUUsQ0FBQztJQUV2QyxHQUFHLENBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUUsQ0FBQztJQUUvQixJQUFJLElBQUksRUFDUjtRQUNDLElBQ0E7WUFDQyxNQUFNLE1BQU0sR0FBRyxNQUFNLE1BQU0sQ0FBRSxJQUFJLENBQUMsUUFBUSxDQUFFLENBQUM7WUFDN0MsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztZQUU1QixHQUFHLENBQUUsU0FBUyxFQUFFLElBQUksQ0FBRSxDQUFDO1lBRXZCLElBQUksSUFBSTtnQkFBRyxPQUFPLElBQUksQ0FBRSxJQUFJLENBQUMsS0FBSyxDQUFFLENBQUM7U0FDckM7UUFDRCxPQUFPLEdBQUcsRUFBRztZQUFFLEdBQUcsQ0FBRSxHQUFHLENBQUMsQ0FBQztTQUFFO0tBRTNCO0lBRUQsT0FBTyxTQUFTLENBQUUsTUFBTSxDQUFFLENBQUM7QUFDNUIsQ0FBQyxDQUFDO0FB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