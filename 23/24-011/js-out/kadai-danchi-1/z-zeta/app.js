import * as meh from "../../meh/index.js";
import { root, Exist, Leafr, Leaf, Branch } from "../../meh/index.js";
import { dom, ef } from "../../meh/index.js";
const log = console.log;
const existquest = () => {
    const ex1 = new Exist(root);
    const ex2 = new Exist(ex1);
    const refs = new Exist.RefContainer();
    const ref = new Exist.Ref(refs, {});
    ref.source = ex1;
    ref.source = ex2;
    ref.ref_term();
    ex1.terminate();
};
const leafrefquest = () => {
    log("Ref Quest");
    const leafr = new Leafr.Boolean(root, false);
    const refs = new Exist.RefContainer();
    const ref = new meh.Leafr.Ref(refs, {});
    ref.source = new Leafr.Boolean(root, true);
    refs.refs_term();
    root.terminate();
};
const { main, article, section, h2, h3, p, button } = ef;
const letterrefquert = () => {
    const ex = new Exist(root);
    const nl1 = new Leaf.Number(ex, 0);
    const sl1 = new Leaf.String(ex, "Abc Def");
    const applet = article(h2("Letter Ref Quest"), section(nl1), section(sl1), section(button({ acts: { click() { sl1.value = "ZZzzzzz"; nl1.value++; } } }, "button")));
    const nodet = dom.create(ex, main(applet), "body", "#literal-main");
};
const domquest = () => {
    const ex = new Exist(root);
    const t = "";
    // const t2 : defs.Text = new Leafr.Boolean( ex, true ).conv( v => v ? "ハロー" : "グッバイ" );
    const attrs = { x: 1 };
    attrs.x = 0;
    // attrs.zzz = t2;
    attrs;
    const a2 = {};
    a2.childNodes;
    const acts = {};
    //
    const applet = article({ class: "applet" }, h2("DOM-Quest"), section({ class: "_content" }, h3("ツリー組み立て"), section("新橋", " ", "有楽町", " ", button("TERM"))));
    const applets = main(applet, HSL.Applet(ex));
    const nodet = dom.create(ex, applets, "body", "#literal-main");
};
var HSL;
(function (HSL) {
    class HSLBranch extends Branch {
        update() {
            ;
        }
    }
    HSL.Applet = (owner) => {
        const ex = new Exist(owner);
        const value = new Leaf.Number(ex, 33);
        return article({ class: "applet", }, h2("HSL Applet"), section({ class: "_content" }));
    };
})(HSL || (HSL = {}));
class VMBase extends Exist {
    refs = new Exist.RefContainer();
}
// existquest();
// leafrefquest();
// domquest();
letterrefquert();
export const name = "app";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdHMtc3JjL2thZGFpLWRhbmNoaS0xL3otemV0YS9hcHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLEdBQUcsTUFBTSxvQkFBb0IsQ0FBQztBQUMxQyxPQUFPLEVBQVMsSUFBSSxFQUFFLEtBQUssRUFBa0IsS0FBSyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM3RixPQUFPLEVBQVEsR0FBRyxFQUFTLEVBQUUsRUFBTSxNQUFNLG9CQUFvQixDQUFDO0FBQzlELE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFFeEIsTUFBTSxVQUFVLEdBQUcsR0FBRyxFQUFFO0lBRXZCLE1BQU0sR0FBRyxHQUFHLElBQUksS0FBSyxDQUFFLElBQUksQ0FBRSxDQUFDO0lBQzlCLE1BQU0sR0FBRyxHQUFHLElBQUksS0FBSyxDQUFFLEdBQUcsQ0FBRSxDQUFDO0lBQzdCLE1BQU0sSUFBSSxHQUFHLElBQUksS0FBSyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RDLE1BQU0sR0FBRyxHQUFHLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBRSxJQUFJLEVBQUUsRUFBRSxDQUFFLENBQUM7SUFDdEMsR0FBRyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7SUFDakIsR0FBRyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7SUFDakIsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2YsR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQ2pCLENBQUMsQ0FBQztBQUVGLE1BQU0sWUFBWSxHQUFHLEdBQUcsRUFBRTtJQUV6QixHQUFHLENBQUUsV0FBVyxDQUFFLENBQUM7SUFFbkIsTUFBTSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFFLElBQUksRUFBRSxLQUFLLENBQUUsQ0FBQztJQUMvQyxNQUFNLElBQUksR0FBRyxJ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