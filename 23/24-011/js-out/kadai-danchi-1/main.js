import { dom, ef, each, root, log } from "../meh/index.js";
const ents = Object.entries;
log("kadai-danchi-1 main");
const App = async () => {
    const params = new URLSearchParams(location.search);
    const roomindex = params.get("page") ?? "";
    const room = danchimap.rooms[roomindex];
    log("room", roomindex, room);
    if (room) {
        const module = await import(room.module_url);
        const Page = module.default;
        log("dymport", Page);
        if (Page)
            return Page(room.index);
    }
    return DanchiMap(params);
};
const DanchiMap = (ps) => {
    // const ps = new URLSearchParams( "?a=111&b=2222" );
    log(ps, ps.entries());
    Object.entries(ps).forEach(e => log("forEach", e));
    return ef.main({}, ef.h1("課題団地"), ef.h2("Meh"), ef.p("HTML Single Page App Framework"), ef.table(each(Array.from(ps.entries()), ([name, value]) => ef.tr(ef.td(name), ef.td(value)))), ef.section(Link(danchimap.rooms["1-1-101"])), ef.section(ef.textarea({ props: { value: "Danchi" } })));
};
const Link = (room) => {
    return ef.a({ attrs: { href: room?.link ?? "" } }, room?.index ?? "---");
};
const unavailable = true;
const danchimapsrc = {
    "1": {
        "1": {
            "101": {},
            "102": {},
        },
    },
};
class Building // 棟
 {
    rooms = {};
}
class Block // 街区
 {
    buildings = {};
}
const danchimap = new class {
    constructor() {
        for (const [block_i, block_src] of ents(danchimapsrc)) {
            const label = block_i;
            log("街区", label);
            const block = new Block();
            this.blocks[block_i] = block;
            for (const [building_i, buil_src] of ents(block_src)) {
                const label = [block_i, building_i].join("-");
                log("団地棟", label);
                const building = new Building();
                for (const [room_i, room_src] of ents(buil_src)) {
                    const path = [block_i, building_i, room_i];
                    const roomindex = path.join("-");
                    const room = {
                        index: roomindex,
                        link: `?page=${roomindex}`,
                        module_url: `./${path.join("/")}.js`
                    };
                    building.rooms[room_i] = room;
                    this.rooms[roomindex] = room;
                    log("団地部屋", roomindex, room.module_url);
                }
            }
        }
    }
    blocks = {};
    rooms = {};
    get(index) { return this.rooms[index]; }
};
dom.create(root, await App(), "body");
export const dummy = {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3RzLXNyYy9rYWRhaS1kYW5jaGktMS9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZSxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFeEUsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUU1QixHQUFHLENBQUUscUJBQXFCLENBQUUsQ0FBQztBQUk3QixNQUFNLEdBQUcsR0FBRyxLQUFLLElBQUksRUFBRTtJQUV0QixNQUFNLE1BQU0sR0FBRyxJQUFJLGVBQWUsQ0FBRSxRQUFRLENBQUMsTUFBTSxDQUFFLENBQUM7SUFFdEQsTUFBTSxTQUFTLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBRSxNQUFNLENBQUUsSUFBSSxFQUFFLENBQUM7SUFDN0MsTUFBTSxJQUFJLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBRSxTQUFTLENBQUUsQ0FBQztJQUUxQyxHQUFHLENBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUUsQ0FBQztJQUUvQixJQUFJLElBQUksRUFDUjtRQUNDLE1BQU0sTUFBTSxHQUFHLE1BQU0sTUFBTSxDQUFFLElBQUksQ0FBQyxVQUFVLENBQUUsQ0FBQztRQUMvQyxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDO1FBQzVCLEdBQUcsQ0FBRSxTQUFTLEVBQUUsSUFBSSxDQUFFLENBQUM7UUFDdkIsSUFBSSxJQUFJO1lBQUcsT0FBTyxJQUFJLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBRSxDQUFDO0tBQ3JDO0lBRUQsT0FBTyxTQUFTLENBQUUsTUFBTSxDQUFFLENBQUM7QUFDNUIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxTQUFTLEdBQUcsQ0FBRSxFQUFvQixFQUFHLEVBQUU7SUFFNUMscURBQXFEO0lBRXJELEdBQUcsQ0FBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFFLENBQUM7SUFFeEIsTUFBTSxDQUFDLE9BQU8sQ0FBRSxFQUFFLENBQUUsQ0FBQyxPQUFPLENBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUUsU0FBUyxFQUFFLENBQUMsQ0FBRSxDQUFFLENBQUM7SUFFekQsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUViLEVBQUUsRUFFRixFQUFFLENBQUMsRUFBRSxDQUFFLE1BQU0sQ0FBRSxFQUNmLEVBQUUsQ0FBQyxFQUFFLENBQUUsS0FBSyxDQUFFLEVBQ2QsRUFBRSxDQUFDLENBQUMsQ0FBRSxnQ0FBZ0MsQ0FBRSxFQUV4QyxFQUFFLENBQUMsS0FBSyxDQUVQLElBQUksQ0FFSCxLQUFLLENBQUMsSUFBSSxDQUFFLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBRSxFQUUxQixDQUFFLENBQUUsSUFBSSxFQUFFLEtBQUssQ0FBRSxFQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUUzQixFQUFFLENBQUMsRUFBRSxDQUFFLElBQUksQ0FBRSxFQUNiLEVBQUUsQ0FBQyxFQUFFLENBQUUsS0FBSyxDQUFFLENBQ2QsQ0FDRCxDQUNELEVBRUQsRUFBRSxDQUFDLE9BQU8sQ0FFVCxJQUFJLENBQUUsU0FBUyxDQUFDLEtBQUssQ0FBRSxTQUFTLENBQUUsQ0FBRSxDQUNwQyxFQUVELEVBQUUsQ0FBQyxPQUFPLENBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFFLENBQUUsQ0FDM0QsQ0FBQztBQUNILENBQUMsQ0FBQztBQUVGLE1BQU0sSUFBSSxHQUFHLENBQUUsSUFBYSxFQUFHLEVBQUU7SUFFaEMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxJQUFJLEtBQUssQ0FBRSxDQUFDO0FBQzVFLENBQUMsQ0FBQztBQUVGLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQztBQUV6QixNQUFNLFlBQVksR0FDbEI7SUFDQyxHQUFHLEVBQ0g7UUFDQyxHQUFHLEVBQ0g7WUFDQyxLQUFLLEVBQUUsRUFBRTtZQUNULEtBQUssRUFBRSxFQUFFO1NBQ1Q7S0FDRDtDQUNELENBQUM7QUFJRixNQUFNLFFBQVEsQ0FBQyxJQUFJOztJQUVsQixLQUFLLEdBQTZCLEVBQUUsQ0FBQztDQUNyQztBQUVELE1BQU0sS0FBSyxDQUFDLEtBQUs7O0lBRWhCLFNBQVMsR0FBZ0MsRUFBRSxDQUFDO0NBQzVDO0FBRUQsTUFBTSxTQUFTLEdBQUcsSUFBSTtJQUVyQjtRQUVDLEtBQUssTUFBTSxDQUFFLE9BQU8sRUFBRSxTQUFTLENBQUUsSUFBSSxJQUFJLENBQUUsWUFBWSxDQUFFLEVBQ3pEO1lBQ0MsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDO1lBRXRCLEdBQUcsQ0FBRSxJQUFJLEVBQUUsS0FBSyxDQUFFLENBQUM7WUFFbkIsTUFBTSxLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztZQUMxQixJQUFJLENBQUMsTUFBTSxDQUFFLE9BQU8sQ0FBRSxHQUFHLEtBQUssQ0FBQztZQUUvQixLQUFLLE1BQU0sQ0FBRSxVQUFVLEVBQUUsUUFBUSxDQUFFLElBQUksSUFBSSxDQUFFLFNBQVMsQ0FBRSxFQUN4RDtnQkFDQyxNQUFNLEtBQUssR0FBRyxDQUFFLE9BQU8sRUFBRSxVQUFVLENBQUUsQ0FBQyxJQUFJLENBQUUsR0FBRyxDQUFFLENBQUM7Z0JBRWxELEdBQUcsQ0FBRSxLQUFLLEVBQUUsS0FBSyxDQUFFLENBQUM7Z0JBRXBCLE1BQU0sUUFBUSxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7Z0JBRWhDLEtBQUssTUFBTSxDQUFFLE1BQU0sRUFBRSxRQUFRLENBQUUsSUFBSSxJQUFJLENBQUUsUUFBUSxDQUFFLEVBQ25EO29CQUNDLE1BQU0sSUFBSSxHQUFHLENBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLENBQUUsQ0FBQztvQkFDN0MsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBRSxHQUFHLENBQUUsQ0FBQztvQkFFbkMsTUFBTSxJQUFJLEdBQ1Y7d0JBQ0MsS0FBSyxFQUFFLFNBQVM7d0JBQ2hCLElBQUksRUFBRSxTQUFVLFNBQVUsRUFBRTt3QkFDNUIsVUFBVSxFQUFFLEtBQU0sSUFBSSxDQUFDLElBQUksQ0FBRSxHQUFHLENBQUcsS0FBSztxQkFDeEMsQ0FBQztvQkFFRixRQUFRLENBQUMsS0FBSyxDQUFFLE1BQU0sQ0FBRSxHQUFHLElBQUksQ0FBQztvQkFDaEMsSUFBSSxDQUFDLEtBQUssQ0FBRSxTQUFTLENBQUUsR0FBRyxJQUFJLENBQUM7b0JBRS9CLEdBQUcsQ0FBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUUsQ0FBQztpQkFFMUM7YUFDRDtTQUNEO0lBQ0YsQ0FBQztJQUVELE1BQU0sR0FBOEIsRUFBRSxDQUFDO0lBQ3ZDLEtBQUssR0FBNkIsRUFBRSxDQUFDO0lBRXJDLEdBQUcsQ0FBRSxLQUFjLElBQXdCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBRSxLQUFLLENBQUUsQ0FBQSxDQUFDLENBQUM7Q0FDdkUsQ0FBQztBQUVGLEdBQUcsQ0FBQyxNQUFNLENBQUUsSUFBSSxFQUFFLE1BQU0sR0FBRyxFQUFFLEVBQUUsTUFBTSxDQUFFLENBQUM7QUFFeEMsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQyJ9