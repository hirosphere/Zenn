import { Exist, dom, ef, each, root, log } from "../meh/index.js";
import * as models from "./models/navi.js";
import { PageA } from "./models/page.js";
import mapsrc from "./map/danchi.js";
const vals = Object.values;
class App extends Exist {
    set_index() {
        ;
    }
    async make() {
        const params = new URLSearchParams(location.search);
        const danchi = new models.Danchi(root, mapsrc);
        const roompath = params.get("room") ?? "";
        const room = danchi.rooms[roompath];
        log("room", roompath, room?.title.v);
        if (room) {
            try {
                const module = await import(room.mod_path);
                const { Page } = module;
                log("dymport", Page);
                if (Page) {
                    return Page(room);
                }
                ;
            }
            catch (err) {
                log(err);
                return ui.page.Deafault(room);
            }
        }
        return ef.main(ef.h1("課題団地"), ui.map.Danchi(danchi), SearchMonitor(params));
    }
    ;
}
var ui;
(function (ui) {
    var page;
    (function (page) {
        page.Deafault = (room) => {
            return PageA(room, ef.section(ef.p("入居の準備中です")));
        };
    })(page = ui.page || (ui.page = {}));
})(ui || (ui = {}));
(function (ui) {
    var map;
    (function (map) {
        map.Danchi = (model) => {
            return ef.section({ class: "danchi-map" }, ef.section(each(vals(model.parts), block => map.Block(block))));
        };
        map.Block = (model) => {
            return ef.section(ef.h2(model.index, "街区"), ef.section({ class: "buildings" }, each(vals(model.parts), part => Building(part))));
        };
        const Building = (model) => {
            return ef.section({ class: "building" }, ef.h3(model.path), ef.section({ class: "rooms" }, each(vals(model.parts), part => Room(part))));
        };
        const Room = (model) => {
            return ef.a({
                class: "room",
                attrs: { href: model.link }
            }, model.index, ef.span(model.title));
        };
    })(map = ui.map || (ui.map = {}));
})(ui || (ui = {}));
const SearchMonitor = (ps) => {
    return ef.article({}, ef.h2("URL Search"), ef.table(each(Array.from(ps.entries()), ([name, value]) => ef.tr(ef.td(name), ef.td(value)))), ef.section({ props: {}, attrs: {}, style: { display: "flex", gap: "1ex", } }), ef.section(ef.textarea({ props: { value: "Danchi" } })));
};
dom.create(root, await new App(root).make(), "body");
export const dummy = {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3RzLXNyYy9rYWRhaS1kYW5jaGktMS9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQWMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzlFLE9BQU8sS0FBSyxNQUFNLE1BQU0sa0JBQWtCLENBQUM7QUFDM0MsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3pDLE9BQU8sTUFBTSxNQUFNLGlCQUFpQixDQUFDO0FBR3JDLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFFM0IsTUFBTSxHQUFJLFNBQVEsS0FBSztJQUV0QixTQUFTO1FBRVIsQ0FBQztJQUNGLENBQUM7SUFFRCxLQUFLLENBQUMsSUFBSTtRQUVULE1BQU0sTUFBTSxHQUFHLElBQUksZUFBZSxDQUFFLFFBQVEsQ0FBQyxNQUFNLENBQUUsQ0FBQztRQUV0RCxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUUsSUFBSSxFQUFFLE1BQU0sQ0FBRSxDQUFDO1FBRWpELE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUUsTUFBTSxDQUFFLElBQUksRUFBRSxDQUFDO1FBQzVDLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUUsUUFBUSxDQUFFLENBQUM7UUFFdEMsR0FBRyxDQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUUsQ0FBQztRQUV2QyxJQUFJLElBQUksRUFDUjtZQUNDLElBQ0E7Z0JBQ0MsTUFBTSxNQUFNLEdBQUcsTUFBTSxNQUFNLENBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBRSxDQUFDO2dCQUM3QyxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFD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