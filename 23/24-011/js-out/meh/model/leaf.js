import { Exist, _container } from "./exist.js";
import { Branch } from "./branch.js";
const log = console.log;
/** StrRefSrc
 *
 * Leafの値をNodetで利用する際、小数点フォーマットのようなアレンジも一意に扱うためのインターフェース。
 *
*/
const default_tostr = (value) => String(value);
export class StringSource extends Exist {
    tostr = default_tostr;
}
export class Conv extends StringSource {
    source;
    constructor(source, tostr) {
        super(source);
        this.tostr = tostr;
        this.source = source;
    }
    createRef(refs, update) {
        return new LeafrRef(refs, update, this.source);
    }
    terminate() {
        this.source = null;
        this.tostr = null;
        super.terminate();
    }
}
/** Leaf Readonly */
export class Leafr extends StringSource {
    _value;
    constructor(container, _value) {
        super(container);
        this._value = _value;
    }
    /** ref */
    createRef(refs, update) {
        return new LeafrRef(refs, update, this);
    }
    conv(conv) { return new Conv(this, conv); }
    /** value */
    get v() { return this._value; }
    get val() { return this._value; }
    get value() { return this._value; }
    get() { return this._value; }
    setreadonlyvalue(newv, changer) {
        if (newv === this._value)
            return false;
        const oldv = this._value;
        this._value = newv;
        if (changer != this[_container] && this[_container] instanceof Branch) {
            this[_container].update();
        }
        log("SET VALUE");
        this._refs.forEach(ref => {
            (ref instanceof LeafrRef) &&
                ref != changer &&
                ref._new_value(newv, oldv);
        });
        return true;
    }
}
class LeafrRef extends Exist.Ref {
    update;
    constructor(refs, update, source) {
        super(refs);
        this.update = update;
        this.source = source;
    }
    /** value */
    get v() { return this.value; }
    get val() { return this.value; }
    get value() { return this.source?.get(); }
    /** source */
    set source(news) {
        super.source = news;
    }
    get source() {
        return (this._source instanceof Leafr) && this._source || null;
    }
    _new_source(news, olds) {
        super._new_source(news, olds);
        this._new_value(this.source?.value);
    }
    _new_value(newv, oldv) {
        log("NEW VALUE");
        this.source && this.update({ newv, oldv, newstr: this.tostr(newv), oldstr: this.tostr(oldv) });
    }
    tostr(value) {
        return this.source && value !== undefined && this.source.tostr?.(value) || "";
    }
}
(function (Leafr) {
    /** プリミティブ型シュガー */
    class String extends Leafr {
    }
    Leafr.String = String;
    class Number extends Leafr {
    }
    Leafr.Number = Number;
    class Boolean extends Leafr {
    }
    Leafr.Boolean = Boolean;
    ;
})(Leafr || (Leafr = {}));
/** Leaf RW  */
export class Leaf extends Leafr {
    set(newv, changer) {
        return this.setreadonlyvalue(newv, changer);
    }
    set v(newv) { this.setreadonlyvalue(newv); }
    set val(newv) { this.setreadonlyvalue(newv); }
    set value(newv) { this.setreadonlyvalue(newv); }
    get v() { return this._value; }
    get val() { return this._value; }
    get value() { return this._value; }
}
/** class Ref < V > */
export class LeafRef extends LeafrRef {
    /** value */
    get v() { return this.value; }
    get val() { return this.value; }
    get value() { return this.source?.get(); }
    set v(newv) { this.value = newv; }
    set val(newv) { this.value = newv; }
    set value(newv) {
        if (!this.source) {
            return;
        }
        newv !== undefined && this.source?.set(newv, this);
    }
    /** source */
    set source(news) { super._source = news; }
    get source() {
        return (this._source instanceof Leaf) && this._source || null;
    }
}
(function (Leaf) {
    /** プリミティブ型シュガー */
    class String extends Leaf {
    }
    Leaf.String = String;
    class Number extends Leaf {
    }
    Leaf.Number = Number;
    class Boolean extends Leaf {
    }
    Leaf.Boolean = Boolean;
    ;
})(Leaf || (Leaf = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVhZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RzLXNyYy9tZWgvbW9kZWwvbGVhZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWEsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUMxRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3JDLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFFeEI7Ozs7RUFJRTtBQUVGLE1BQU0sYUFBYSxHQUFHLENBQVEsS0FBUyxFQUFZLEVBQUUsQ0FBQyxNQUFNLENBQUUsS0FBSyxDQUFFLENBQUM7QUFFdEUsTUFBTSxPQUFnQixZQUFtQixTQUFRLEtBQUs7SUFROUMsS0FBSyxHQUE4QixhQUFhLENBQUM7Q0FDeEQ7QUFFRCxNQUFNLE9BQU8sSUFBVyxTQUFRLFlBQWtCO0lBRXZDLE1BQU0sQ0FBdUI7SUFFdkMsWUFFQyxNQUFvQixFQUNwQixLQUF5QjtRQUd6QixLQUFLLENBQUUsTUFBTSxDQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdEIsQ0FBQztJQUVlLFNBQVMsQ0FFeEIsSUFBaUIsRUFDakIsTUFBMkI7UUFJM0IsT0FBTyxJQUFJLFFBQVEsQ0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUUsQ0FBQztJQUN6RCxDQUFDO0lBRWUsU0FBUztRQUV4QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNsQixLQUFLLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDbkIsQ0FBQztDQUNEO0FBS0Qsb0JBQW9CO0FBRXBCLE1BQU0sT0FBTyxLQUFZLFNBQVEsWUFBa0I7SUFFSjtJQUE5QyxZQUFhLFNBQXFC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