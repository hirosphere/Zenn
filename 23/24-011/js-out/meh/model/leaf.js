import { Exist, _owner, _refs } from "./exist.js";
import { Branch } from "./branch.js";
const log = console.log;
/** Leaf Readonly */
export const _setvalue = Symbol();
export class Leafr extends Exist {
    _value;
    static make(owner, lol) {
        return lol instanceof Leafr ? lol : new Leafr(owner, lol);
    }
    ;
    /**  */
    constructor(container, _value) {
        super(container);
        this._value = _value;
    }
    /** value */
    get v() { return this._value; }
    get val() { return this._value; }
    get value() { return this._value; }
    get() { return this._value; }
    [_setvalue](newv, changer) {
        if (newv === this._value)
            return false;
        const oldv = this._value;
        this._value = newv;
        if (changer != this[_owner] && this[_owner] instanceof Branch) {
            this[_owner].update();
        }
        log(this.runiq, "_setvalue", newv, this[_refs].size);
        this[_refs].forEach(ref => {
            (ref instanceof Leafr.Ref) &&
                ref._new_value(newv, oldv);
        });
        return true;
    }
}
const default_tostr = (value) => String(value || "..");
(function (Leafr) {
    class Ref extends Exist.Ref {
        leafr_acts;
        constructor(refs, leafr_acts) {
            super(refs);
            this.leafr_acts = leafr_acts;
        }
        /** source */
        set source(news) {
            super.source = news;
        }
        get source() {
            return (this._source instanceof Leafr) && this._source || undefined;
        }
        _new_source(news, olds) {
            super._new_source(news, olds);
            this._new_value(this.source?.value);
        }
        /** value */
        get v() { return this.value; }
        get val() { return this.value; }
        get value() { return this.source?.get(); }
        get letter() { return this.tostr(this.source?.get()); }
        tostr = default_tostr;
        /** event */
        _new_value(newv, oldv) {
            this.leafr_acts?.new_value?.(newv, oldv);
        }
        /** life */
        ref_term() {
            super.ref_term();
        }
    }
    Leafr.Ref = Ref;
})(Leafr || (Leafr = {}));
(function (Leafr) {
    /** プリミティブ型シュガー */
    class String extends Leafr {
    }
    Leafr.String = String;
    class Number extends Leafr {
    }
    Leafr.Number = Number;
    class Boolean extends Leafr {
    }
    Leafr.Boolean = Boolean;
    ;
})(Leafr || (Leafr = {}));
/** Leaf RW  */
export class Leaf extends Leafr {
    static make(owner, lol) {
        return lol instanceof Leaf ? lol : new Leaf(owner, lol);
    }
    ;
    /**  */
    set(newv, changer) {
        return this[_setvalue](newv, changer);
    }
    set v(newv) { this[_setvalue](newv); }
    set val(newv) { this[_setvalue](newv); }
    set value(newv) { this[_setvalue](newv); }
    get v() { return this._value; }
    get val() { return this._value; }
    get value() { return this._value; }
}
(function (Leaf) {
    /** class Ref < V > */
    class Ref extends Leafr.Ref {
        /** source */
        set source(news) { super._source = news; }
        get source() {
            return (this._source instanceof Leaf) && this._source || undefined;
        }
        /** value */
        get v() { return this.value; }
        get val() { return this.value; }
        get value() { return this.source?.get(); }
        set v(newv) { this.value = newv; }
        set val(newv) { this.value = newv; }
        set value(newv) {
            this.source && newv !== undefined && this.source.set(newv, this);
        }
    }
    Leaf.Ref = Ref;
})(Leaf || (Leaf = {}));
(function (Leaf) {
    /** プリミティブ型シュガー */
    class String extends Leaf {
    }
    Leaf.String = String;
    class Number extends Leaf {
    }
    Leaf.Number = Number;
    class Boolean extends Leaf {
    }
    Leaf.Boolean = Boolean;
    ;
})(Leaf || (Leaf = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVhZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RzLXNyYy9tZWgvbW9kZWwvbGVhZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQVMsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNyQyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0FBR3hCLG9CQUFvQjtBQUVwQixNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsTUFBTSxFQUFFLENBQUM7QUFFbEMsTUFBTSxPQUFPLEtBQVksU0FBUSxLQUFLO0lBU0s7SUFQMUMsTUFBTSxDQUFDLElBQUksQ0FBUyxLQUFhLEVBQUUsR0FBcUI7UUFFdkQsT0FBTyxHQUFHLFlBQVksS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFTLEtBQUssRUFBRSxHQUFHLENBQUUsQ0FBQztJQUNwRSxDQUFDO0lBQUEsQ0FBQztJQUVGLE9BQU87SUFFUCxZQUFhLFNBQWlCLEVBQVksTUFBVTtRQUVuRCxLQUFLLENBQUUsU0FBUyxDQUFFLENBQUM7UUFGc0IsV0FBTSxHQUFOLE1BQU0sQ0FBSTtJQUdwRCxDQUFDO0lBRUQsWUFBWTtJQUVaLElBQVcsQ0FBQyxLQUFTLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDMUMsSUFBVyxHQUFHLEtBQVMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM1QyxJQUFXLEtBQUssS0FBUyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLEdBQUcsS0FBUyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBRWpDLENBQUUsU0FBUyxDQUFFLENBQUUsSUFBUSxFQUFFLE9BQW9DO1FBRW5FLElB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