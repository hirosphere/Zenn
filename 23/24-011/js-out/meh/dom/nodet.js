import { Exist } from "../model/exist.js";
import { LeafrRefFactory } from "../model/leaf.js";
import { defs } from "./defs.js";
import { createParts } from "./parts.js";
const log = console.log;
/** class Nodet
 *
 * DOMNode, DOMElementのプロパティーと要素をリアクティブにする委譲クラス。
 *
*/
export class Nodet extends Exist {
    parts;
    refs = new Exist.Refs;
    constructor(container, def, ce, rel) {
        super(container);
        const node = (def instanceof defs.Element) ?
            this.createElement(def) :
            this.createText(def);
        log(ce, node);
        ce?.insertBefore(node, rel || null);
    }
    createElement(def) {
        const e = document.createElement(def.type);
        let { attrs, } = def.echar || {};
        if (attrs) {
            for (let [name, value] of Object.entries(attrs)) {
                this.bindAttr(e, name, value);
            }
        }
        if (def.parts)
            this.parts = createParts(this, e, def.parts);
        attrs = undefined;
        return e;
    }
    bindAttr(e, name, value) {
        if (value instanceof LeafrRefFactory) {
            value.createRef(this.refs, newv => setAttr(e, name, newv, value.tostr));
        }
        else
            setAttr(e, name, String(value));
    }
    createText(def) {
        const node = document.createTextNode("");
        if (def instanceof LeafrRefFactory) {
            def.createRef(this.refs, newv => node.nodeValue = String(newv) || "");
        }
        else
            node.nodeValue = String(def);
        return node;
    }
    terminate() {
        this.parts?.terminate();
        this.refs.terminate();
        super.terminate();
    }
}
const setAttr = (e, name, value, tostr) => {
    e.setAttribute(name, tostr ? tostr(value) : String(value));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90cy1zcmMvbWVoL2RvbS9ub2RldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWEsS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFTLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzFELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFnQixXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFDdEQsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQztBQUV4Qjs7OztFQUlFO0FBRUYsTUFBTSxPQUFPLEtBQU0sU0FBUSxLQUFLO0lBRXJCLEtBQUssQ0FBa0I7SUFDdkIsSUFBSSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQztJQUVoQyxZQUVDLFNBQXNCLEVBQ3RCLEdBQXNCLEVBQ3RCLEVBQTJCLEVBQzNCLEdBQWlCO1FBR2pCLEtBQUssQ0FBRSxTQUFTLENBQUUsQ0FBQztRQUVuQixNQUFNLElBQUksR0FBRyxDQUFFLEdBQUcsWUFBWSxJQUFJLENBQUMsT0FBTyxDQUFFLENBQUMsQ0FBQztZQUM3QyxJQUFJLENBQUMsYUFBYSxDQUFFLEdBQUcsQ0FBRSxDQUFDLENBQUM7WUFDM0IsSUFBSSxDQUFDLFVBQVUsQ0FBRSxHQUFHLENBQUUsQ0FDdEI7UUFFRCxHQUFHLENBQUUsRUFBRSxFQUFFLElBQUksQ0FBRSxDQUFBO1FBRWYsRUFBRSxFQUFFLFlBQVksQ0FBRSxJQUFJLEVBQUUsR0FBRyxJQUFJLElBQUksQ0FBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFUyxhQUFhLENBQUUsR0FBa0I7UUFFMUMsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBRSxHQUFHLENBQUMsSUFBSSxDQUFFLENBQUM7UUFFN0MsSUFBSSxFQUFFLEtBQUssR0FBSSxHQUFHLEdBQUcsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO1FBRWxDLElBQUksS0FBSyxFQUNUO1lBQ0MsS0FBSyxJQUFJLENBQUUsSUFBSSxFQUFFLEtBQUssQ0FBRSxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUUsS0FBSyxDQUFFLEVBQ25EO2dCQUNDLElBQUksQ0FBQyxRQUFRLENBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUUsQ0FBQzthQUNoQztTQUNEO1FBRUQsSUFBSSxHQUFHLENBQUMsS0FBSztZQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBRSxDQUFDO1FBRy9ELEtBQUssR0FBRyxTQUFTLENBQUM7UUFDbEIsT0FBTyxDQUFDLENBQUM7SUFDVixDQUFDO0lBRVMsUUFBUSxDQUFFLENBQVcsRUFBRSxJQUFZLEVBQUUsS0FBaUI7UUFFL0QsSUFBSSxLQUFLLFlBQVksZUFBZSxFQUNwQztZQUNDLEtBQUssQ0FBQyxTQUFTLENBRWQsSUFBSSxDQUFDLElBQUksRUFDVCxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFFLENBQzdDLENBQUM7U0FDRjs7WUFDSSxPQUFPLENBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLENBQUUsS0FBSyxDQUFFLENBQUUsQ0FBQztJQUMxQyxDQUFDO0lBRVMsVUFBVSxDQUFFLEdBQWU7UUFFcEMsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBRSxFQUFFLENBQUUsQ0FBQztRQUMzQyxJQUFJLEdBQUcsWUFBWSxlQUFlLEVBQ2xDO1lBQ0MsR0FBRyxDQUFDLFNBQVMsQ0FFWixJQUFJLENBQUMsSUFBSSxFQUNULElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBSSxNQUFNLENBQUUsSUFBSSxDQUFFLElBQUksRUFBRSxDQUM5QyxDQUFDO1NBQ0Y7O1lBQ0ksSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUUsR0FBRyxDQUFFLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRWUsU0FBUztRQUV4QixJQUFJLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDdEIsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25CLENBQUM7Q0FDRDtBQUVELE1BQU0sT0FBTyxHQUFHLENBQUUsQ0FBVyxFQUFFLElBQWEsRUFBRSxLQUFXLEVBQUUsS0FBb0MsRUFBVSxFQUFFO0lBRTFHLENBQUMsQ0FBQyxZQUFZLENBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFFLEtBQUssQ0FBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUUsS0FBSyxDQUFFLENBQUUsQ0FBQztBQUNsRSxDQUFDLENBQUMifQ==