import { Exist } from "../model/exist.js";
import { LeafrRefFactory } from "../model/leaf.js";
import { defs } from "./defs.js";
import { createParts } from "./parts.js";
const log = console.log;
/** class Nodet
 *
 * DOMNode, DOMElementのプロパティーと要素をリアクティブにする委譲クラス。
 *
*/
export class Nodet extends Exist {
    parts;
    refs = new Exist.Refs;
    _e;
    get e() { return this._e; }
    constructor(container, def, ce, rel) {
        super(container);
        const node = (def instanceof defs.Element) ?
            (this._e = this.createElement(def)) :
            this.createText(def);
        log(ce, node);
        ce?.insertBefore(node, rel || null);
    }
    createElement(def) {
        const e = document.createElement(def.type);
        let { attrs, } = def.echar || {};
        if (attrs) {
            for (let [name, value] of Object.entries(attrs)) {
                this.bindAttr(e, name, value);
            }
        }
        if (def.parts)
            this.parts = createParts(this, def.parts);
        attrs = undefined;
        return e;
    }
    bindAttr(e, name, value) {
        if (value instanceof LeafrRefFactory) {
            value.createRef(this.refs, newv => setAttr(e, name, newv, value.tostr));
        }
        else
            setAttr(e, name, String(value));
    }
    createText(def) {
        const node = document.createTextNode("");
        if (def instanceof LeafrRefFactory) {
            def.createRef(this.refs, newv => node.nodeValue = String(newv) || "");
        }
        else
            node.nodeValue = String(def);
        return node;
    }
    terminate() {
        this.parts?.terminate();
        this.refs.terminate();
        super.terminate();
    }
}
const setAttr = (e, name, value, tostr) => {
    e.setAttribute(name, tostr ? tostr(value) : String(value));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90cy1zcmMvbWVoL2RvbS9ub2RldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWEsS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFTLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzFELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFnQixXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFDdEQsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQztBQUV4Qjs7OztFQUlFO0FBRUYsTUFBTSxPQUFPLEtBQU0sU0FBUSxLQUFLO0lBRXJCLEtBQUssQ0FBa0I7SUFDdkIsSUFBSSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQztJQUN0QixFQUFFLENBQWE7SUFFekIsSUFBVyxDQUFDLEtBQTJCLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBRSxDQUFDLENBQUM7SUFFekQsWUFBYSxTQUFxQixFQUFFLEdBQWUsRUFBRSxFQUFtQixFQUFFLEdBQVk7UUFFckYsS0FBSyxDQUFFLFNBQVMsQ0FBRSxDQUFDO1FBRW5CLE1BQU0sSUFBSSxHQUFHLENBQUUsR0FBRyxZQUFZLElBQUksQ0FBQyxPQUFPLENBQUUsQ0FBQyxDQUFDO1lBQzdDLENBQUUsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFFLEdBQUcsQ0FBRSxDQUFFLENBQUMsQ0FBQztZQUN6QyxJQUFJLENBQUMsVUFBVSxDQUFFLEdBQUcsQ0FBRSxDQUN0QjtRQUVELEdBQUcsQ0FBRSxFQUFFLEVBQUUsSUFBSSxDQUFFLENBQUE7UUFFZixFQUFFLEVBQUUsWUFBWSxDQUFFLElBQUksRUFBRSxHQUFHLElBQUksSUFBSSxDQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVTLGFBQWEsQ0FBRSxHQUFrQjtRQUUxQyxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUUsQ0FBQztRQUU3QyxJQUFJLEVBQUUsS0FBSyxHQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFFbEMsSUFBSSxLQUFLLEVBQ1Q7WUFDQyxLQUFLLElBQUksQ0FBRSxJQUFJLEVBQUUsS0FBSyxDQUFFLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBRSxLQUFLLENBQUUsRUFDbkQ7Z0JBQ0MsSUFBSSxDQUFDLFFBQVEsQ0FBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBRSxDQUFDO2FBQ2hDO1NBQ0Q7UUFFRCxJQUFJLEdBQUcsQ0FBQyxLQUFLO1lBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUUsQ0FBQztRQUc1RCxLQUFLLEdBQUcsU0FBUyxDQUFDO1FBQ2xCLE9BQU8sQ0FBQyxDQUFDO0lBQ1YsQ0FBQztJQUVTLFFBQVEsQ0FBRSxDQUFXLEVBQUUsSUFBWSxFQUFFLEtBQWlCO1FBRS9ELElBQUksS0FBSyxZQUFZLGVBQWUsRUFDcEM7WUFDQyxLQUFLLENBQUMsU0FBUyxDQUVkLElBQUksQ0FBQyxJQUFJLEVBQ1QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBRSxDQUM3QyxDQUFDO1NBQ0Y7O1lBQ0ksT0FBTyxDQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFFLEtBQUssQ0FBRSxDQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVTLFVBQVUsQ0FBRSxHQUFlO1FBRXBDLE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUUsRUFBRSxDQUFFLENBQUM7UUFDM0MsSUFBSSxHQUFHLFlBQVksZUFBZSxFQUNsQztZQUNDLEdBQUcsQ0FBQyxTQUFTLENBRVosSUFBSSxDQUFDLElBQUksRUFDVCxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUksTUFBTSxDQUFFLElBQUksQ0FBRSxJQUFJLEVBQUUsQ0FDOUMsQ0FBQztTQUNGOztZQUNJLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFFLEdBQUcsQ0FBRSxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVlLFNBQVM7UUFFeEIsSUFBSSxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3RCLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0NBQ0Q7QUFFRCxNQUFNLE9BQU8sR0FBRyxDQUFFLENBQVcsRUFBRSxJQUFhLEVBQUUsS0FBVyxFQUFFLEtBQW9DLEVBQVUsRUFBRTtJQUUxRyxDQUFDLENBQUMsWUFBWSxDQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBRSxLQUFLLENBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFFLEtBQUssQ0FBRSxDQUFFLENBQUM7QUFDbEUsQ0FBQyxDQUFDIn0=