import { root, Exist, Leafr, Leaf, Branch } from "../meh/index.js";
import { dom, ef } from "../meh/index.js";
const log = console.log;
const existquest = () => {
    const ex1 = new Exist(root);
    const ex2 = new Exist(ex1);
    const refs = new Exist.Refs();
    const ref = new Exist.Ref(refs);
    ref.source = ex1;
    ref.source = ex2;
    ref.terminate();
    ex1.terminate();
};
const leafrefquest = () => {
    log("Ref Quest");
    const leafr = new Leafr.Boolean(root, false);
    const refs = new Exist.Refs();
    const ref = leafr.createRef(refs, v => log(v));
    ref.source = new Leafr.Boolean(root, true);
    refs.terminate();
    root.terminate();
};
const { main, article, section, h2, h3, p, button } = ef;
const domquest = () => {
    const ex = new Exist(root);
    const t = "";
    const t2 = new Leafr.Boolean(ex, true).conv(v => v ? "ハロー" : "グッバイ");
    const attrs = { x: 1 };
    attrs.x = 0;
    attrs.zzz = t2;
    attrs;
    const a2 = {};
    a2.childNodes;
    const acts = {};
    //
    const applet = article({ class: "applet" }, h2("DOM-Quest"), section({ class: "_content" }, h3("ツリー組み立て"), section("新橋", " ", "有楽町", " ", button("TERM"))));
    const applets = main(applet, HSL.Applet(ex));
    const nodet = dom.create(ex, applets, "body", "#literal-main");
};
var HSL;
(function (HSL) {
    class HSLBranch extends Branch {
        update() {
            ;
        }
    }
    HSL.Applet = (container) => {
        const ex = new Exist(container);
        const value = new Leaf.Number(ex, 77);
        return article({ class: "applet", }, h2("HSL Applet"), section({ class: "_content" }, Range.UI({ title: "Range", value })));
    };
})(HSL || (HSL = {}));
var Range;
(function (Range) {
    class Model {
        title;
        value;
    }
    Range.Model = Model;
    Range.UI = (model) => {
        const { div, span, input } = ef;
        const label = span(model.title || "");
        const range = input({
            attrs: { type: "range" },
            props: { value: model.value || 0 },
            acts: {
                input(ev) {
                    if (!(ev.target instanceof HTMLInputElement))
                        return;
                    // log( ev.target.value );
                    model.value?.set(Number(ev.target.value));
                }
            }
        });
        const value = span(model.value);
        return div({ class: "range" }, label, range, value, " ", model.value?.conv(v => "" + v / 100));
    };
})(Range || (Range = {}));
// existquest();
// leafrefquest();
domquest();
export const name = "app";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMtc3JjL3F1ZXN0LWEvYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBUyxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUUsT0FBTyxFQUFRLEdBQUcsRUFBUyxFQUFFLEVBQU0sTUFBTSxpQkFBaUIsQ0FBQztBQUMzRCxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0FBRXhCLE1BQU0sVUFBVSxHQUFHLEdBQUcsRUFBRTtJQUV2QixNQUFNLEdBQUcsR0FBRyxJQUFJLEtBQUssQ0FBRSxJQUFJLENBQUUsQ0FBQztJQUM5QixNQUFNLEdBQUcsR0FBRyxJQUFJLEtBQUssQ0FBRSxHQUFHLENBQUUsQ0FBQztJQUM3QixNQUFNLElBQUksR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM5QixNQUFNLEdBQUcsR0FBRyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUUsSUFBSSxDQUFFLENBQUM7SUFDbEMsR0FBRyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7SUFDakIsR0FBRyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7SUFDakIsR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ2hCLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQztBQUNqQixDQUFDLENBQUM7QUFFRixNQUFNLFlBQVksR0FBRyxHQUFHLEVBQUU7SUFFekIsR0FBRyxDQUFFLFdBQVcsQ0FBRSxDQUFDO0lBRW5CLE1BQU0sS0FBSyxHQUFHLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBRSxJQUFJLEVBQUUsS0FBSyxDQUFFLENBQUM7SUFDL0MsTUFBTSxJQUFJLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDOUIsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLFNBQVMs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