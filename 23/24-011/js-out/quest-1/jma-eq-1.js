import { Exist, Leaf, Renn, ef, root } from "../meh/index.js";
import { EQDrop } from "./jma-eq-son.js";
var UM;
(function (UM) {
    class App extends Exist {
        list = new EQList(this);
    }
    UM.App = App;
    class EQList extends Renn {
        itemmap = new Map;
        json = new Leaf.String(this, "JSON");
        list = new Leaf.String(this, "リスト");
        tl = new Leaf.String(this, "timeline");
        eid_map = new Map;
        constructor(compos) {
            super(compos);
            // this.setsrcv( cache as eq [] );
        }
        async load() {
            const res = await fetch("https://www.jma.go.jp/bosai/quake/data/list.json");
            if (res.status == 200) {
                const data = await res.json();
                this.setsrcv(data);
            }
        }
        async setsrcv(srcv) {
            this.clear();
            const list = srcv.map((i, n) => [
                String(n + 1),
                i.at.slice(0, 19).replace("T", " "),
                i.anm,
                i.mag,
                i.maxi,
                i.cod
            ]
                .join("\t")).join("\n");
            this.list.value = list;
            const eqlist = {};
            const start = new Date().getTime() - (32 * 24 * 60 * 60 * 1000);
            srcv.forEach(eq => {
                delete eq.int;
                const x = eqlist[eq.eid];
                if (!x || eq.ctt > x?.ctt) {
                    const date = new Date(eq.at);
                    eq.date = date.toLocaleString().slice(0, -3);
                    eq.time = (date.getTime() - start) / (24 * 60 * 60 * 1000);
                    eqlist[eq.eid] = eq;
                }
            });
            this.tl.value = Object.values(eqlist).map(i => [i.time, i.date, i.mag, i.anm, i.cod,].join("  \t")).join("\n");
            // this.json.value = JSON.stringify( srcv, null, "\t" );
            this.json.value = JSON.stringify(eqlist, null, "    ");
        }
        clear() {
            this.json.value = "";
            this.list.value = "";
            this.tl.value = "";
            super.clear();
        }
        clear_json() { this.json.value = ""; }
    }
    class EQItem extends Exist {
    }
})(UM || (UM = {}));
var UI;
(function (UI) {
    UI.App = (um) => {
        const drop = new EQDrop();
        return ef.article(ef.h1("気象庁 地震リスト"), ef.section(ef.button({ acts: { click() { um.list.load(); } } }, "ロード"), ef.button({ acts: { click() { drop.test(); } } }, "son"), ef.button({ acts: { click() { um.list.clear(); } } }, "消去")), ef.section(
        // ta( um.list.list ),
        // ta( um.list.json ),
        ta(um.list.tl)));
    };
    const ta = (value) => ef.textarea({
        style: {
            width: "100%",
            height: "330px",
        },
        props: { value },
    });
})(UI || (UI = {}));
export const App = () => UI.App(new UM.App(root));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam1hLWVxLTEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90cy1zcmMvcXVlc3QtMS9qbWEtZXEtMS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQWMsRUFBRSxFQUFRLElBQUksRUFBTyxNQUFNLGlCQUFpQixDQUFDO0FBQ3JGLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUd6QyxJQUFVLEVBQUUsQ0FtSFg7QUFuSEQsV0FBVSxFQUFFO0lBRVgsTUFBYSxHQUFJLFNBQVEsS0FBSztRQUU3QixJQUFJLEdBQUcsSUFBSSxNQUFNLENBQUUsSUFBSSxDQUFFLENBQUM7S0FDMUI7SUFIWSxNQUFHLE1BR2YsQ0FBQTtJQUVELE1BQU0sTUFBTyxTQUFRLElBQWU7UUFFbkMsT0FBTyxHQUFHLElBQUksR0FBc0IsQ0FBQztRQUVyQyxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLElBQUksRUFBRSxNQUFNLENBQUUsQ0FBQztRQUN2QyxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLElBQUksRUFBRSxLQUFLLENBQUUsQ0FBQztRQUN0QyxFQUFFLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLElBQUksRUFBRSxVQUFVLENBQUUsQ0FBQztRQUV6QyxPQUFPLEdBQUcsSUFBSSxHQUFtQixDQUFDO1FBRWxDLFlBQWEsTUFBYztZQUUxQixLQUFLLENBQUUsTUFBTSxDQUFFLENBQUM7WUFDaEIsa0NBQWtDO1FBQ25DLENBQUM7UUFFRCxLQUFLLENBQUMsSUFBSTtZQUVULE1BQU0sR0FBRyxHQUFHLE1BQU0sS0FBSyxDQUFFLGtEQUFrRCxDQUFFLENBQUM7WUFDOUUsSUFBSSxHQUFHLENBQUMsTUFBTSxJQUFJLEdBQUcsRUFDckI7Z0JBQ0MsTUFBTSxJQUFJLEdBQUcsTUFBTSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQzlCLElBQUksQ0FBQyxPQUFPLENBQUUsSUFBSSxDQUFFLENBQUM7YUFDckI7UUFFRixDQUFDO1FBRUQsS0FBSyxDQUFDLE9BQU8sQ0FBRSxJQUFZO1lBRTFCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUViLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUUsQ0FBRSxDQUFPLEVBQUUsQ0FBVSxFQUFHLEVBQUUsQ0FDakQ7Z0JBQ0MsTUFBTSxDQUFFLENBQUMsR0FBRyxDQUFDLENBQUU7Z0JBQ2YsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBRSxDQUFDLE9BQU8sQ0FBRSxHQUFHLEVBQUUsR0FBRyxDQUFFO2dCQUN2QyxDQUFDLENBQUMsR0FBRztnQkFDTCxDQUFDLENBQUMsR0FBRztnQkFDTCxDQUFDLENBQUMsSUFBSTtnQkFDTixDQUFDLENBQUMsR0FBRzthQUNMO2lCQUNBLElBQUksQ0FBRSxJQUFJLENBQUUsQ0FBRSxDQUFDLElBQUksQ0FBRSxJQUFJLENBQUUsQ0FBQztZQUU3QixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7WUFFdkIsTUFBTSxNQUFNLEdBQXdCLEVBQUUsQ0FBQztZQUN2QyxNQUFNLEtBQUssR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBRSxDQUFDO1lBRWxFLElBQUksQ0FBQyxPQUFPLENBRVgsRUFBRSxDQUFDLEVBQUU7Z0JBRUosT0FBTyxFQUFFLENBQUMsR0FBRyxDQUFDO2dCQUNkLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBRSxFQUFFLENBQUMsR0FBRyxDQUFFLENBQUM7Z0JBQzNCLElBQUksQ0FBRSxDQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUMxQjtvQkFDQyxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBRSxFQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7b0JBQy9CLEVBQUUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLEtBQUssQ0FBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUUsQ0FBQztvQkFDL0MsRUFBRSxDQUFDLElBQUksR0FBRyxDQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxLQUFLLENBQUUsR0FBRyxDQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBRSxDQUFDO29CQUMvRCxNQUFNLENBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxHQUFHLEVBQUUsQ0FBQztpQkFDdEI7WUFDRixDQUFDLENBQ0QsQ0FBQztZQUVGLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUUsTUFBTSxDQUFFLENBQUMsR0FBRyxDQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBRSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUcsQ0FBQyxJQUFJLENBQUUsTUFBTSxDQUFFLENBQUUsQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFFLENBQUM7WUFHekgsd0RBQXdEO1lBQ3hELElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUUsQ0FBQztRQUMxRCxDQUFDO1FBRVEsS0FBSztZQUViLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztZQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7WUFDckIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO1lBRW5CLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNmLENBQUM7UUFFRCxVQUFVLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztLQUV0QztJQXlCRCxNQUFNLE1BQU8sU0FBUSxLQUFLO0tBQ3hCO0FBQ0gsQ0FBQyxFQW5IUyxFQUFFLEtBQUYsRUFBRSxRQW1IWDtBQUVELElBQVUsRUFBRSxDQW1DWDtBQW5DRCxXQUFVLEVBQUU7SUFFRSxNQUFHLEdBQUcsQ0FBRSxFQUFXLEVBQUcsRUFBRTtRQUVwQyxNQUFNLElBQUksR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBRTFCLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FFaEIsRUFBRSxDQUFDLEVBQUUsQ0FBRSxXQUFXLENBQUUsRUFDcEIsRUFBRSxDQUFDLE9BQU8sQ0FFVCxFQUFFLENBQUMsTUFBTSxDQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsS0FBSyxLQUFLLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBRSxFQUM1RCxFQUFFLENBQUMsTUFBTSxDQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsS0FBSyxLQUFLLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFFLEVBQ3pELEVBQUUsQ0FBQyxNQUFNLENBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFFLENBQzVELEVBQ0QsRUFBRSxDQUFDLE9BQU87UUFFVCxzQkFBc0I7UUFDdEIsc0JBQXNCO1FBQ3RCLEVBQUUsQ0FBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBRSxDQUNoQixDQUNELENBQUM7SUFDSCxDQUFDLENBQUM7SUFFRixNQUFNLEVBQUUsR0FBRyxDQUFFLEtBQW1CLEVBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBRWhEO1FBQ0MsS0FBSyxFQUNMO1lBQ0MsS0FBSyxFQUFFLE1BQU07WUFDYixNQUFNLEVBQUUsT0FBTztTQUNmO1FBQ0QsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFO0tBQ2hCLENBQ0QsQ0FBQztBQUNILENBQUMsRUFuQ1MsRUFBRSxLQUFGLEVBQUUsUUFtQ1g7QUFFRCxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBRSxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUUsSUFBSSxDQUFFLENBQUUsQ0FBQyJ9