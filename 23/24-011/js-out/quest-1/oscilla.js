import { Exist, Leaf, ef, root } from "../meh/index.js";
var docs;
(function (docs) {
    class App extends Exist {
        osc1 = docs.Osc(this);
    }
    docs.App = App;
    docs.Osc = (com) => {
        const self = new Exist(com);
        const update = () => {
            rt.freq.value = Math.pow(2, (rt.pitch.value - 69)) / 12;
        };
        const rt = {
            pitch: new Leaf.Number(self, 69, update),
            freq: new Leaf.Number(self, 0),
        };
        return rt;
    };
})(docs || (docs = {}));
var um;
(function (um) {
    class App extends Exist {
        constructor(com) {
            super(com);
            const doc = new docs.App(this);
            this.pitch = new PitchRange(this, {
                title: "Pitch",
                value: doc.osc1.pitch,
                min: 0,
                max: 144,
                step: 0.01
            });
            let o;
            o = { x: 1 };
            o = undefined;
        }
        pitch;
    }
    um.App = App;
    class Range extends Exist {
        constructor(com, props) {
            super(com);
            this.title = Leaf.make(this, props.title);
            this.value = Leaf.make(this, props.value);
            this.min = Leaf.make(this, props.min ?? 0);
            this.max = Leaf.make(this, props.max ?? 100);
            this.step = Leaf.make(this, props.step ?? 1);
        }
        title;
        value;
        min;
        max;
        step;
        masure = new Leaf.Number(this, 0);
    }
    um.Range = Range;
    class PitchRange extends Range {
        constructor(com, props) {
            super(com, props);
            this.freq = Leaf.make(this, 0);
            const new_value = (v) => {
                this.freq.value = ptof(v);
            };
            new Leaf.Ref(this, { new_value }, this.value);
        }
        freq;
    }
    um.PitchRange = PitchRange;
    const ptof = (pitch) => {
        return 440 * Math.pow(2, (pitch - 69) / 12);
    };
})(um || (um = {}));
var ui;
(function (ui) {
    ui.Range = (model) => {
        const input = (ev) => {
            if (!(ev.target instanceof HTMLInputElement))
                return;
            model.value.set(Number(ev.target.value));
        };
        return ef.div({ style: { display: "grid" } }, ef.span({ style: { grid: "4em" } }, model.title), ef.input({
            attrs: { type: "range" },
            props: {
                value: model.value,
                min: model.min,
                max: model.max,
                step: model.step
            },
            acts: { input }
        }), ef.span(model.value));
    };
    ui.PitchRel = (um) => {
        return ef.section(ef.p(um.freq));
    };
})(ui || (ui = {}));
export const Oscilla = () => {
    const model = new um.App(root);
    return ef.article(ef.h1("Oscilla"), ui.Range(model.pitch), ui.PitchRel(model.pitch));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3NjaWxsYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3RzLXNyYy9xdWVzdC0xL29zY2lsbGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBUyxJQUFJLEVBQVUsRUFBRSxFQUFRLElBQUksRUFBTyxNQUFNLGlCQUFpQixDQUFDO0FBR2xGLElBQVUsSUFBSSxDQXlCYjtBQXpCRCxXQUFVLElBQUk7SUFFYixNQUFhLEdBQUksU0FBUSxLQUFLO1FBRTdCLElBQUksR0FBRyxLQUFBLEdBQUcsQ0FBRSxJQUFJLENBQUUsQ0FBQztLQUNuQjtJQUhZLFFBQUcsTUFHZixDQUFBO0lBRVksUUFBRyxHQUFHLENBQUUsR0FBVyxFQUFHLEVBQUU7UUFFcEMsTUFBTSxJQUFJLEdBQUcsSUFBSSxLQUFLLENBQUUsR0FBRyxDQUFFLENBQUM7UUFFOUIsTUFBTSxNQUFNLEdBQUUsR0FBRyxFQUFFO1lBRWxCLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUUsQ0FBQyxFQUFFLENBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFFLENBQUUsR0FBRyxFQUFFLENBQUM7UUFDN0QsQ0FBQyxDQUFDO1FBRUYsTUFBTSxFQUFFLEdBQ1I7WUFDQyxLQUFLLEVBQUUsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsTUFBTSxDQUFFO1lBQzFDLElBQUksRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUUsSUFBSSxFQUFFLENBQUMsQ0FBRTtTQUNoQyxDQUFDO1FBRUYsT0FBTyxFQUFFLENBQUM7SUFDWCxDQUFDLENBQUM7QUFFSCxDQUFDLEVBekJTLElBQUksS0FBSixJQUFJLFFBeUJiO0FBRUQsSUFBVSxFQUFFLENBbUZYO0FBbkZELFdBQVUsRUFBRTtJQUVYLE1BQWEsR0FBSSxTQUFRLEtBQUs7UUFFN0IsWUFBYSxHQUFXO1lBRXZCLEtBQUssQ0FBRSxHQUFHLENBQUUsQ0FBQztZQUViLE1BQU0sR0FBRyxHQUFHLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBRSxJQUFJLENBQUUsQ0FBQztZQUVqQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksVUFBVSxDQUUxQixJQUFJLEVBQ0o7Z0JBQ0MsS0FBSyxFQUFFLE9BQU87Z0JBQ2QsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSztnQkFDckIsR0FBRyxFQUFFLENBQUM7Z0JBQ04sR0FBRyxFQUFFLEdBQUc7Z0JBQ1IsSUFBSSxFQUFFLElBQUk7YUFDVixDQUNELENBQUM7WUFFRixJQUFJLENBQWtCLENBQUM7WUFDdkIsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFHLENBQUMsRUFBRSxDQUFBO1lBQ2IsQ0FBQyxHQUFHLFNBQVMsQ0FBQztRQUNmLENBQUM7UUFFRCxLQUFLLENBQUM7S0FDTjtJQTFCWSxNQUFHLE1BMEJmLENBQUE7SUFXRCxNQUFhLEtBQU0sU0FBUSxLQUFLO1FBRS9CLFlBQWEsR0FBVyxFQUFFLEtBQWM7WUFFdkMsS0FBSyxDQUFFLEdBQUcsQ0FBRSxDQUFDO1lBRWIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFFLElBQUksRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFFLENBQUM7WUFDNUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFFLElBQUksRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFFLENBQUM7WUFDNUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFFLElBQUksRUFBRSxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBRSxDQUFDO1lBQzdDLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUUsQ0FBQztZQUMvQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFFLENBQUM7UUFDaEQsQ0FBQztRQUVELEtBQUssQ0FBQztRQUNOLEtBQUssQ0FBQztRQUNOLEdBQUcsQ0FBQztRQUNKLEdBQUcsQ0FBQztRQUNKLElBQUksQ0FBQztRQUNMLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUUsSUFBSSxFQUFFLENBQUMsQ0FBRSxDQUFDO0tBQ3BDO0lBbkJZLFFBQUssUUFtQmpCLENBQUE7SUFFRCxNQUFhLFVBQVcsU0FBUSxLQUFLO1FBRXBDLFlBQWEsR0FBVyxFQUFFLEtBQWM7WUFFdkMsS0FBSyxDQUFFLEdBQUcsRUFBRSxLQUFLLENBQUUsQ0FBQztZQUVwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUUsSUFBSSxFQUFFLENBQUMsQ0FBRSxDQUFDO1lBRWpDLE1BQU0sU0FBUyxHQUFHLENBQUUsQ0FBVSxFQUFHLEVBQUU7Z0JBRWxDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBRSxDQUFDLENBQUUsQ0FBQztZQUM3QixDQUFDLENBQUM7WUFFRixJQUFJLElBQUksQ0FBQyxHQUFHLENBQUUsSUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBRSxDQUFDO1FBQ2pELENBQUM7UUFFRCxJQUFJLENBQUM7S0FDTDtJQWpCWSxhQUFVLGFBaUJ0QixDQUFBO0lBRUQsTUFBTSxJQUFJLEdBQUcsQ0FBRSxLQUFjLEVBQVksRUFBRTtRQUUxQyxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFFLENBQUMsRUFBRSxDQUFFLEtBQUssR0FBRyxFQUFFLENBQUUsR0FBRyxFQUFFLENBQUUsQ0FBQztJQUNqRCxDQUFDLENBQUM7QUFDSCxDQUFDLEVBbkZTLEVBQUUsS0FBRixFQUFFLFFBbUZYO0FBRUQsSUFBVSxFQUFFLENBeUNYO0FBekNELFdBQVUsRUFBRTtJQUVFLFFBQUssR0FBRyxDQUFFLEtBQWdCLEVBQUcsRUFBRTtRQUUzQyxNQUFNLEtBQUssR0FBRyxDQUFFLEVBQVUsRUFBRyxFQUFFO1lBRTlCLElBQUksQ0FBRSxDQUFFLEVBQUUsQ0FBQyxNQUFNLFlBQVksZ0JBQWdCLENBQUU7Z0JBQUcsT0FBTztZQUV6RCxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBRSxNQUFNLENBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUUsQ0FBRSxDQUFDO1FBQzlDLENBQUMsQ0FBQztRQUVGLE9BQU8sRUFBRSxDQUFDLEdBQUcsQ0FFWixFQUFFLEtBQUssRUFBRSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUU5QixFQUFFLENBQUMsSUFBSSxDQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBRSxFQUNsRCxFQUFFLENBQUMsS0FBSyxDQUVQO1lBQ0MsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRTtZQUN4QixLQUFLLEVBQ0w7Z0JBQ0MsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO2dCQUNsQixHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUc7Z0JBQ2QsR0FBRyxFQUFFLEtBQUssQ0FBQyxHQUFHO2dCQUNkLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSTthQUNoQjtZQUNELElBQUksRUFBRSxFQUFFLEtBQUssRUFBRTtTQUNmLENBQ0QsRUFDRCxFQUFFLENBQUMsSUFBSSxDQUFFLEtBQUssQ0FBQyxLQUFLLENBQUUsQ0FDdEIsQ0FBQztJQUNILENBQUMsQ0FBQTtJQUVZLFdBQVEsR0FBRyxDQUFFLEVBQWtCLEVBQUcsRUFBRTtRQUVoRCxPQUFPLEVBQUUsQ0FBQyxPQUFPLENBRWhCLEVBQUUsQ0FBQyxDQUFDLENBQUUsRUFBRSxDQUFDLElBQUksQ0FBRSxDQUNmLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSCxDQUFDLEVBekNTLEVBQUUsS0FBRixFQUFFLFFBeUNYO0FBRUQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLEdBQUcsRUFBRTtJQUUzQixNQUFNLEtBQUssR0FBRyxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUUsSUFBSSxDQUFFLENBQUE7SUFFaEMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUVoQixFQUFFLENBQUMsRUFBRSxDQUFFLFNBQVMsQ0FBRSxFQUNsQixFQUFFLENBQUMsS0FBSyxDQUFFLEtBQUssQ0FBQyxLQUFLLENBQUUsRUFDdkIsRUFBRSxDQUFDLFFBQVEsQ0FBRSxLQUFLLENBQUMsS0FBSyxDQUFFLENBQzFCLENBQUM7QUFDSCxDQUFDLENBQUEifQ==