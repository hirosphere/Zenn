import { Leaf, leaf, ef } from "../meh/index.js";
import { sitepub } from "./sitepub_all_utf8.js";
import { Range } from "../range.js";
const log = console.log;
const clip = (value, min, max) => Math.max(min, Math.min(max, value));
const pxRatio = 100;
const { div, h2, h3, } = ef;
class MapModel {
    current = new Leaf(null);
    zoom;
    center;
    lat = { max: 45.5132, min: 24.3413 };
    long = { max: 145.8026, min: 123.7798 };
    scrollCSS = leaf.string("");
    zoomCSS = leaf.string("");
    //
    hover = new Leaf(null);
    hoverInfo = new Leaf.String("");
    wheelMon = new Leaf.String("wheel");
    wheelZoom;
    wheelCenter;
    constructor() {
        const rel = () => this.update();
        this.zoom = new Leaf.Number(5, { rel });
        this.center = new Leaf({ lat: 36.0, long: 139.0 }, { rel });
        this.current.ref((newItem, oldItem) => this.updateCurrent(newItem, oldItem));
        rel();
        //
        this.hover.ref((site) => this.hoverInfo.value = site ? `${site.code} ${site.name} ${site.nameR}` : "");
        this.wheelZoom = this.zoom.value;
        this.wheelCenter = this.center.value;
    }
    update() {
        const scale = this.scale;
        const tlx = -this.longToPx(this.center.value.long) + "px";
        const tly = -this.latToPx(this.center.value.lat) + "px";
        this.scrollCSS.value = `translate( ${tlx}, ${tly} )`;
        this.zoomCSS.value = `scale( ${scale}, ${scale} )`;
    }
    updateCurrent(newItem, oldItem) {
        log({ new: newItem?.code, old: oldItem?.code });
        oldItem && (oldItem.selected.value = false);
        newItem && (newItem.selected.value = true);
    }
    putWheelEvent(ev) {
        const mode = (ev.deltaY % 1 ? "zoom" : "scroll");
        this.wheelMon.value = `${ev.deltaX} ${ev.deltaY} ${mode}`;
        if (mode == "zoom") {
            const zoom = this.wheelZoom + ev.deltaY * -0.1;
            this.wheelZoom = Math.min(10, Math.max(0, zoom));
            this.zoom.value = Math.round(this.wheelZoom);
        }
        else // mode == "scroll"
         {
            const center = this.center.value;
            const scale = 0.01 / this.scale;
            const long = clip(center.long + ev.deltaX * scale, this.long.min, this.long.max);
            const lat = clip(center.lat - ev.deltaY * scale, this.lat.min, this.lat.max);
            this.center.value = { lat, long };
        }
        ev.preventDefault();
    }
    cssPos(site) {
        const left = this.longToPx(site.long) + "px";
        const top = this.latToPx(site.lat) + "px";
        return { left, top };
    }
    latToPx(lat) { return (this.lat.max - lat) * pxRatio; }
    longToPx(long) { return (long - this.long.min) * pxRatio; }
    get scale() { return 0.1 * Math.pow(10, this.zoom.value / 5); }
}
// UI //
var Site;
(function (Site) {
    class Model {
        src;
        selected = leaf.boolean(false);
        constructor(src) {
            this.src = src.split(",");
        }
        get code() { return this.src[0]; }
        get name() { return this.src[1]; }
        get nameR() { return this.src[2]; }
        get lat() { return Number(this.src[3]); }
        get long() { return Number(this.src[4]); }
        get elev() { return Number(this.src[5]); }
        get depth() { return Number(this.src[6]); }
    }
    Site.Model = Model;
    ;
    Site.list = sitepub.split("\n").map(csv => new Model(csv));
    Site.UI = (site, map) => {
        const { left, top } = map.cssPos(site);
        const props = {
            class: ["map-site", { selected: site.selected }],
            styles: { left, top },
            onmouseover(ev) {
                map.hover.value = site;
            },
            onclick() {
                map.current.value = site;
            }
        };
        return div(props);
    };
})(Site || (Site = {}));
const MapFrame = (model) => {
    const onwheel = (ev) => model.putWheelEvent(ev);
    const content = div({ class: "map-content", styles: { transform: model.scrollCSS } }, ...Site.list.map(data => Site.UI(data, model)));
    const zoomFrame = div({ class: "map-zoom", styles: { transform: model.zoomCSS } }, content);
    return div({ class: "map-frame", onwheel }, div(), div(), div(), zoomFrame);
};
export function Map() {
    const model = new MapModel;
    return div({ class: "Map" }, h2("EQ Site Map"), div({ class: "map-cur-site" }, model.current.str({ toref: site => site && `${site.code} ${site.name} ${site.nameR}` || "" })), MapFrame(model), div({ class: "hover-info" }, model.hoverInfo), div(Range.UI({ title: "拡大", value: model.zoom, max: 10 })), div(model.wheelMon));
}
//# sourceMappingURL=data:application/json;base64,