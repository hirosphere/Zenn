import { Leaf, leaf, ef } from "../meh/index.js";
import { sitepub } from "./sitepub_all_utf8.js";
import { Range } from "../range.js";
const log = console.log;
const clip = (value, min, max) => Math.max(min, Math.min(max, value));
const pxRatio = 100;
// Model //
class VO {
    constructor(value, rel) { }
}
class Branch {
    constructor() {
        this.update();
    }
    update() { }
}
class HSL extends Branch {
    hue = new VO(0, this);
    sat = new VO(0, this);
    lgh = new VO(0, this);
    css = new VO("");
    update() {
        return `hsl( ${this.hue}, ${this.sat}%, ${this.lgh}% )`;
    }
}
var Model;
(function (Model) {
    class Map {
        // パラメータ //
        current = new Leaf(null);
        zoom;
        center;
        // 導出値 //
        hover = new Leaf(null);
        hoverInfo = new Leaf.String("");
        scrollCSS = leaf.string("");
        zoomCSS = leaf.string("");
        // 固定値 //
        lat = { max: 45.5132, min: 24.3413 };
        long = { max: 145.8026, min: 123.7798 };
        //  //
        constructor() {
            const rel = () => this.update();
            this.zoom = new Leaf.Number(5, { rel });
            this.center = new Leaf({ lat: 36.0, long: 139.0 }, { rel });
            this.current.ref((newItem, oldItem) => this.updateCurrent(newItem, oldItem));
            rel();
            this.hover.ref((site) => this.hoverInfo.value = site ? `${site.code} ${site.name} ${site.nameR}` : "");
        }
        update() {
            const scale = this.zoomScale;
            const tlx = -this.longToPx(this.center.value.long) + "px";
            const tly = -this.latToPx(this.center.value.lat) + "px";
            this.scrollCSS.value = `translate( ${tlx}, ${tly} )`;
            this.zoomCSS.value = `scale( ${scale}, ${scale} )`;
        }
        updateCurrent(newItem, oldItem) {
            log({ new: newItem?.code, old: oldItem?.code });
            oldItem && (oldItem.selected.value = false);
            newItem && (newItem.selected.value = true);
        }
        cssPos(site) {
            const left = this.longToPx(site.long) + "px";
            const top = this.latToPx(site.lat) + "px";
            return { left, top };
        }
        latToPx(lat) { return (this.lat.max - lat) * pxRatio; }
        longToPx(long) { return (long - this.long.min) * pxRatio; }
        get zoomScale() { return 0.1 * Math.pow(10, this.zoom.value / 5); }
    }
    Model.Map = Map;
    //
    class Site {
        src;
        selected = leaf.boolean(false);
        constructor(src) {
            this.src = src.split(",");
        }
        get code() { return this.src[0]; }
        get name() { return this.src[1]; }
        get nameR() { return this.src[2]; }
        get lat() { return Number(this.src[3]); }
        get long() { return Number(this.src[4]); }
        get elev() { return Number(this.src[5]); }
        get depth() { return Number(this.src[6]); }
        static list = sitepub.split("\n").map(csv => new Site(csv));
    }
    Model.Site = Site;
    ;
    log("sitecount", Site.list.length);
})(Model || (Model = {}));
// UI //
var UI;
(function (UI) {
    const { div, h2, h3, } = ef;
    const Site = (site, map) => {
        const { left, top } = map.cssPos(site);
        const props = {
            class: ["map-site", { selected: site.selected }],
            style: { left, top },
            onmouseover(ev) {
                map.hover.value = site;
            },
            onclick() {
                map.current.value = site;
            },
        };
        return div(props);
    };
    //
    class ZoomWork {
        map;
        wheelMon = new Leaf.String("", { rel: () => this.zoom() });
        wheelZoom;
        touchMon = new Leaf.String("");
        constructor(map) {
            this.map = map;
            this.wheelZoom = map.zoom.value;
        }
        putWheelEvent(ev) {
            if (!ev.cancelable)
                return;
            const mode = (ev.deltaY % 1 ? "zoom" : "scroll");
            this.wheelMon.value = `${mode} ${ev.deltaX} ${ev.deltaY}`;
            if (mode == "zoom") {
                const zoom = this.wheelZoom + ev.deltaY * -0.1;
                this.wheelZoom = Math.min(10, Math.max(0, zoom));
                this.map.zoom.value = Math.round(this.wheelZoom);
            }
            else // mode == "scroll"
                this.scroll(ev.deltaX, ev.deltaY);
            ev.preventDefault();
        }
        putTouchEvent(ev) {
            const t0 = ev.touches[0];
            this.touchMon.value = `${ev.touches.length} ${t0.clientX} ${t0.clientY}, ${ev.target?.constructor.name} }`;
            if (ev.cancelable)
                ev.preventDefault();
        }
        scroll(deltaX, deltaY) {
            const center = this.map.center.value;
            const scale = 0.01 / this.map.zoomScale;
            const long = clip(center.long + deltaX * scale, this.map.long.min, this.map.long.max);
            const lat = clip(center.lat - deltaY * scale, this.map.lat.min, this.map.lat.max);
            this.map.center.value = { lat, long };
        }
        zoom() {
            ;
        }
    }
    const MapFrame = (model, zoom_wk) => {
        const onwheel = (ev) => zoom_wk.putWheelEvent(ev);
        const ontouchmove = (ev) => zoom_wk.putTouchEvent(ev);
        const content = div({
            class: "map-content",
            style: { transform: model.scrollCSS }
        }, ...Model.Site.list.map(siteInfo => Site(siteInfo, model)));
        const zoomFrame = div({
            class: "map-zoom",
            style: { transform: model.zoomCSS }
        }, content);
        return div({ class: "map-frame", onwheel, ontouchmove }, div(), div(), div(), zoomFrame);
    };
    UI.Map = () => {
        const model = new Model.Map;
        const zoom_wk = new ZoomWork(model);
        const curtext = model.current.tostr(site => site && `${site.code} ${site.name} ${site.nameR}` || "");
        return div({ class: "map applet" }, h2("EQ Site Map"), div({ class: "map-cur-site" }, curtext), MapFrame(model, zoom_wk), div({ class: "hover-info" }, model.hoverInfo), div(Range.UI({ title: "拡大", value: model.zoom, max: 10 })), div("Wheel", " ", zoom_wk.wheelMon), div("Touch", " ", zoom_wk.touchMon));
    };
})(UI || (UI = {}));
export const Map = UI.Map;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMtc3JjL2VxL21hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDaEQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwQyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0FBRXhCLE1BQU0sSUFBSSxHQUFHLENBQUUsS0FBYyxFQUFFLEdBQVksRUFBRSxHQUFZLEVBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUUsR0FBRyxFQUFFLEtBQUssQ0FBRSxDQUFFLENBQUM7QUFHdkcsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDO0FBRXBCLFdBQVc7QUFFWCxNQUFNLEVBQUU7SUFFUCxZQUFhLEtBQVMsRUFBRSxHQUFlLElBQUcsQ0FBQztDQUMzQztBQUVELE1BQU0sTUFBTTtJQUVYO1FBRUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFBO0lBQ2QsQ0FBQztJQUVELE1BQU0sS0FBSSxDQUFDO0NBQ1g7QUFJRCxNQUFNLEdBQUksU0FBUSxNQUFNO0lBRXZCLEdBQUcsR0FBRyxJQUFJLEVBQUUsQ0FBYyxDQUFDLEVBQUUsSUFBSSxDQUFFLENBQUM7SUFDcEMsR0FBRyxHQUFHLElBQUksRUFBRSxDQUFjLENBQUMsRUFBRSxJQUFJLENBQUUsQ0FBQztJQUNwQyxHQUFHLEdBQUcsSUFBSSxFQUFFLENBQWMsQ0FBQyxFQUFFLElBQUksQ0FBRSxDQUFDO0lBRXBDLEdBQUcsR0FBRyxJQUFJLEVBQUUsQ0FBYyxFQUFFLENBQUUsQ0FBQztJQUUvQixNQUFNO1FBRUwsT0FBTyxRQUFTLElBQUksQ0FBQyxHQUFJ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