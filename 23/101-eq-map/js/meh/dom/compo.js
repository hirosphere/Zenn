import { Leaf, ToStr } from "../model/leaf.js";
import { Parts } from "./parts.js";
const log = console.log;
//
export class Component {
    e = null;
    partsList = new Set;
    refs = new Set();
    constructor(def, ce) {
        this.e = this.createElement(def, ce);
    }
    createElement(def, ce) {
        const { type, props, parts } = def;
        const e = document.createElement(type);
        // if( parts ) this.createParts( e, parts );
        if (parts)
            Parts.create(this, e, parts);
        if (props)
            this.bindProps(props, e);
        if (ce)
            ce.appendChild(e);
        return e;
    }
    bindProps(def, e) {
        for (const [name, value] of Object.entries(def)) {
            if (name == "attrs")
                this.bindAttrs(value, e);
            else if (name == "class")
                this.bindClass(value, e);
            else if (name == "style" && e instanceof HTMLElement)
                this.bindStyle(value, e);
            else
                bindText(e, name, value, this.refs);
        }
    }
    bindClass(def, e) {
        if (def instanceof Array) {
            for (const subdef of def)
                this.bindClass(subdef, e);
            return;
        }
        if (typeof def == "string" || def instanceof Leaf) {
            bindText(e, "className", def, this.refs);
        }
        else if (typeof def == "object") {
            for (const [name, value] of Object.entries(def)) {
                bindClass(e, name, value, this.refs);
            }
        }
    }
    bindAttrs(def, e) {
        for (const [name, value] of Object.entries(def)) {
            log("attr", name, value);
            bindText(e, name, value, this.refs);
        }
    }
    bindStyle(def, e) {
        for (const [name, value] of Object.entries(def)) {
            bindText(e.style, name, value, this.refs);
        }
    }
    terminate() {
        this.partsList.forEach(i => i.terminate());
        this.partsList.clear();
        this.e = null;
    }
}
const bindClass = (e, name, value, refs) => {
    if (value instanceof Leaf) {
        refs.add(value.ref((value) => e.classList.toggle(name, value)));
    }
    else
        e.classList.toggle(name, value);
};
const bindProp = (target, name, value, refs) => {
    if (value instanceof Leaf || value instanceof ToStr) {
        refs.add(value.ref(() => { target[name] = value.value; }));
    }
    else
        target[name] = value;
};
const bindAttr = (target, name, text, refs) => {
    if (text instanceof Leaf || text instanceof ToStr) {
        refs.add(text.ref(() => { target[name] = text.value; }));
    }
    else
        target[name] = text;
};
export const bindText = (target, name, text, refs) => {
    if (text instanceof Leaf || text instanceof ToStr) {
        refs.add(text.ref(() => { target[name] = text.value; }));
    }
    else {
        if (typeof text == "object")
            log(text.constructor.name);
        else
            target[name] = text;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90cy1zcmMvbWVoL2RvbS9jb21wby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFZLEtBQUssRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXpELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFbkMsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQztBQUV4QixFQUFFO0FBRUYsTUFBTSxPQUFPLFNBQVM7SUFFckIsQ0FBQyxHQUFvQixJQUFJLENBQUM7SUFDMUIsU0FBUyxHQUFHLElBQUksR0FBYSxDQUFDO0lBQzlCLElBQUksR0FBRyxJQUFJLEdBQUcsRUFBVyxDQUFDO0lBRTFCLFlBQWEsR0FBa0IsRUFBRSxFQUFtQjtRQUVuRCxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBRSxDQUFDO0lBQ3hDLENBQUM7SUFFRCxhQUFhLENBQUUsR0FBa0IsRUFBRSxFQUFtQjtRQUVyRCxNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsR0FBSSxHQUFHLENBQUM7UUFFcEMsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBRSxJQUFJLENBQUUsQ0FBQztRQUN6Qyw0Q0FBNEM7UUFDNUMsSUFBSSxLQUFLO1lBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBRSxDQUFDO1FBQzNDLElBQUksS0FBSztZQUFHLElBQUksQ0FBQyxTQUFTLENBQUUsS0FBSyxFQUFFLENBQUMsQ0FBRSxDQUFDO1FBRXZDLElBQUksRUFBRTtZQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUUsQ0FBQyxDQUFFLENBQUM7UUFFN0IsT0FBTyxDQUFDLENBQUM7SUFDVixDQUFDO0lBRUQsU0FBUyxDQUFFLEdBQVksRUFB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