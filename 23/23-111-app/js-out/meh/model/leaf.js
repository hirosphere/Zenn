import { Exist } from "./exist.js";
import { Branch } from "./branch.js";
const log = console.log;
/** String Source
 *
 * Leafの値をNodetで利用する際、小数点フォーマットのようなアレンジも一意に扱うためのインターフェース。
 *
*/
export class StrSrcFactory extends Exist {
}
export class StrSrc {
    source;
    tostr;
    constructor(source, tostr) {
        this.source = source;
        this.tostr = tostr;
    }
}
/** Leaf Readonly */
export class LeafRo extends StrSrcFactory {
    _value;
    constructor(owner, _value) {
        super(owner);
        this._value = _value;
    }
    /** to string converter */
    createStrSrc() {
        return new StrSrc(this, value => String(value));
    }
    sc(conv) { return new StrSrc(this, conv); }
    sconv(conv) { return new StrSrc(this, conv); }
    strconv(conv) { return new StrSrc(this, conv); }
    /** value */
    get v() { return this._value; }
    get val() { return this._value; }
    get value() { return this._value; }
    get() { return this._value; }
    setreadonlyvalue(newv, changer) {
        if (newv === this._value)
            return false;
        const oldv = this._value;
        this._value = newv;
        if (changer != this.owner && this.owner instanceof Branch) {
            this.owner.update();
        }
        this.refs.forEach(ref => {
            (ref instanceof LeafRo.Ref) &&
                ref != changer &&
                ref.onValueChange(newv, oldv);
        });
        return true;
    }
}
(function (LeafRo) {
    /** プリミティブ型シュガー */
    class String extends LeafRo {
    }
    LeafRo.String = String;
    class Number extends LeafRo {
    }
    LeafRo.Number = Number;
    class Boolean extends LeafRo {
    }
    LeafRo.Boolean = Boolean;
    ;
    /** class Ref < V > */
    class Ref extends Exist.Ref {
        /** value */
        get v() { return this.value; }
        get val() { return this.value; }
        get value() { return this.source?.get(); }
        /** source */
        set s(newSource) { super.setSource(newSource); }
        set src(newSource) { super.setSource(newSource); }
        set source(newSource) { super.setSource(newSource); }
        get s() { return this.source; }
        get src() { return this.source; }
        get source() {
            return (this._source instanceof LeafRo) && this._source || undefined;
        }
        onValueChange(newv, oldv) { log(this.lf("onValueChange"), newv, oldv); }
        /**  */
        lf(event) { return `LeafRo.Ref[${this.id}-${this.source?.ru ?? "?"}] ${event}`; }
    }
    LeafRo.Ref = Ref;
})(LeafRo || (LeafRo = {}));
/** Leaf RW  */
export class Leaf extends LeafRo {
    set(newv, changer) {
        return this.setreadonlyvalue(newv, changer);
    }
    set v(newv) { this.setreadonlyvalue(newv); }
    set val(newv) { this.setreadonlyvalue(newv); }
    set value(newv) { this.setreadonlyvalue(newv); }
    get v() { return this._value; }
    get val() { return this._value; }
    get value() { return this._value; }
}
(function (Leaf) {
    /** プリミティブ型シュガー */
    class String extends Leaf {
    }
    Leaf.String = String;
    class Number extends Leaf {
    }
    Leaf.Number = Number;
    class Boolean extends Leaf {
    }
    Leaf.Boolean = Boolean;
    ;
    /** class Ref < V > */
    class Ref extends LeafRo.Ref {
        /** value */
        get v() { return this.value; }
        get val() { return this.value; }
        get value() { return this.source?.get(); }
        set v(newv) { this.value = newv; }
        set val(newv) { this.value = newv; }
        set value(newv) {
            if (!this.source) {
                console.error(this.lf("set value"), "source の無きに 値をセット。");
                return;
            }
            newv !== undefined && this.source?.set(newv, this);
        }
        /** source */
        set s(newSource) { super.setSource(newSource); }
        set src(newSource) { super.setSource(newSource); }
        set source(newSource) { super.setSource(newSource); }
        get s() { return this.source; }
        get src() { return this.source; }
        get source() {
            return (this._source instanceof Leaf) && this._source || undefined;
        }
        /** イベントハンドラ */
        onValueChange(newv, oldv) { log(this.lf("onValueChange"), newv, oldv); }
        /**  */
        lf(event) { return `Leaf.Ref[${this.id}-${this.source?.ru ?? "?"}] ${event}`; }
    }
    Leaf.Ref = Ref;
})(Leaf || (Leaf = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVhZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RzLXNyYy9tZWgvbW9kZWwvbGVhZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFTLE1BQU0sWUFBWSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDckMsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQztBQUV4Qjs7OztFQUlFO0FBRUYsTUFBTSxPQUFnQixhQUFjLFNBQVEsS0FBSztDQUdoRDtBQUVELE1BQU0sT0FBTyxNQUFNO0lBSVY7SUFDQTtJQUhSLFlBRVEsTUFBcUIsRUFDckIsS0FBK0I7UUFEL0IsV0FBTSxHQUFOLE1BQU0sQ0FBZTtRQUNyQixVQUFLLEdBQUwsS0FBSyxDQUEwQjtJQUNyQyxDQUFDO0NBQ0g7QUFFRCxvQkFBb0I7QUFFcEIsTUFBTSxPQUFPLE1BQWEsU0FBUSxhQUFhO0lBRVI7SUFBdEMsWUFBYSxLQUFhLEVBQVksTUFBVTtRQUUvQyxLQUFLLENBQUUsS0FBSyxDQUFFLENBQUM7UUFGc0IsV0FBTSxHQUFOLE1BQU0sQ0FBSTtJQUdoRCxDQUFDO0lBRUQsMEJBQTBCO0lBRW5CLFlBQVk7UUFFbEIsT0FBTyxJQUFJLE1BQU0sQ0FBUyxJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUUsS0FBSyxDQUFFLENBQUUsQ0FBQztJQUM1RCxDQUFDO0lBRU0sRUFBRSxDQUFFLElBQThCLElBQW9CLE9BQU8sSUFBSSxNQUFNLENBQVMsSUFBSSxFQUFFLElBQUksQ0FBRSxDQUFDLENBQUMsQ0FBQztJQUMvRixLQUFLLENBQUUsSUFBOEIsSUFBb0IsT0FBTyxJQUFJLE1BQU0sQ0FBUyxJQUFJLEVBQUUsSUFBSSxDQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2xHLE9BQU8sQ0FBRSxJQUE4QixJQUFvQixPQUFPLElBQUksTUFBTSxDQUFTLElBQUksRUFB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