import { models as Mehm, Leaf, ef, each, newhook } from "../meh/index.js";
import { Grazer } from "./grazer.js";
//const log = console.log;
const log = (...any) => { };
const { div, span, p, ul, li, select, option } = ef;
//  //
export const TabSwitchApp = () => {
    const labels = ["Eins", "Zwei", "Drei", "Vier", "Fünf", "Sechs", "Sieben", "Acht", "Neun", "Zehn"];
    const sel = Mehm.Select.fromLabels(labels, "Nuuull");
    sel.root?.parts[3].select();
    return ef.article({ class: "applet" }, ef.h2("TabSwitch"), ef.section({ class: "col-2" }, div(ef.button({ acts: { click() { sel.default.select(); } } }, "Null")), Tabs(sel.root.parts), ContentSwitch(sel.root.parts), ef.section(ef.input({ attrs: { value: sel.current.cv(o => `${o?.value}`) } }))));
};
// Tab|Tab|Tab //
const Tabs = (opts) => {
    const gr = new Grazer({ buttons: 1 });
    const hook = newhook();
    hook.init = () => hook.e && gr.initTouch(hook.e);
    return ul({
        class: "tabs",
        actActs: {
            mousedown(ev) { gr.mousedown(ev); }
        },
        hook
    }, each(opts || [], opt => Tab(opt, gr)));
};
const Tab = (opt, gr) => {
    return li({
        class: ["tab", { selected: opt.selected }],
        actActs: {
            mousedown(ev) { gr.mousedown(ev) && opt.select(); },
            mouseenter(ev) { gr.mouseenter(ev) && opt.select(); },
        }
    }, opt.value);
};
//  //
const ContentSwitch = (options) => {
    return ef.div({ class: "switch" }, each(options, option => Content(option)));
};
const Content = (option) => {
    return ef.section({ class: ["switch-content", { active: option.selected }] }, ef.h2(option.value), ef.p(option.value, " を知らないか？"));
};
//  models  //
var models;
(function (models) {
    class PageContent {
        name;
        constructor(name) {
            this.name = new Leaf.String(name);
        }
    }
    models.PageContent = PageContent;
    class Option extends Mehm.Option {
    }
    models.Option = Option;
})(models || (models = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFic3dpdGNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMtc3JjL2FwcGxldHMvdGFic3dpdGNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLElBQUksSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBUSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hGLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFckMsMEJBQTBCO0FBQzFCLE1BQU0sR0FBRyxHQUFHLENBQUUsR0FBSSxHQUFTLEVBQUcsRUFBRSxHQUFFLENBQUMsQ0FBQztBQUVwQyxNQUFNLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBRXBELE1BQU07QUFFTixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsR0FBRyxFQUFFO0lBRWhDLE1BQU0sTUFBTSxHQUFHLENBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFFLENBQUM7SUFDckcsTUFBTSxHQUFHLEdBQTRCLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFFLE1BQU0sRUFBRSxRQUFRLENBQUUsQ0FBQztJQUNoRixHQUFHLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBRSxDQUFDLENBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUU5QixPQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUUsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFDLEVBRXBDLEVBQUUsQ0FBQyxFQUFFLENBQUUsV0FBVyxDQUFFLEVBQ3BCLEVBQUUsQ0FBQyxPQUFPLENBQUUsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEVB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