import { ef, sf, each, Leaf } from "../meh/index.js";
const log = console.log;
//  //
export const ColorApp1 = () => {
    const svg = sf.svg({ attrs: { width: 400, height: 100 }, style: { transform: "scale( 100% )" } }, Colors());
    const c = Circle({ color: { h: 240, s: 0.7, l: 0.6 }, pos: { x: 200, y: 70 } });
    return ef.article({ class: "applet" }, ef.h2("Color-1"), ef.div({ style: { display: "flex", flexDirection: "column", alignItems: "center" } }, svg));
};
const Colors = () => {
    const c = sf.circle({ attrs: { fill: "hsl( 95, 70%, 70% )", cx: 70, cy: 70, r: 5 } });
    const d = Circle({ color: { h: 240, s: 0.7, l: 0.6 }, pos: { x: 200, y: 70 } });
    const shapes = loop(6, i => ({
        color: { h: 120 + i * 30, s: 0.7, l: 0.7 },
        pos: { x: 50 + i * 60, y: 50 }
    }));
    return sf.g(each(shapes, shape => Circle(shape)));
};
const Circle = (value) => {
    const model = new models.Shape(value);
    log("Circle", model.color.css.val);
    return sf.circle({
        attrs: { fill: model.color.css, cx: model.pos.x, cy: model.pos.y, r: 20 },
        acts: { click() { log(model.color.css.val); } }
    });
};
const Item = () => {
    ;
};
//  //
function loop(count, createItem) {
    const rt = new Array;
    for (let i = 0; i < count; i++)
        rt.push(createItem(i));
    return rt;
}
var models;
(function (models) {
    class Shape {
        color;
        pos;
        constructor(value) {
            this.color = new HSL(value.color);
            this.pos = new Pos(value.pos);
        }
    }
    models.Shape = Shape;
    class HSL {
        h;
        s;
        l;
        css;
        constructor(value) {
            const rel = () => this.update();
            this.h = new Leaf.Number(value.h, { rel });
            this.s = new Leaf.Number(value.s, { rel });
            this.l = new Leaf.Number(value.l, { rel });
            this.css = new Leaf.String("");
            this.update();
        }
        update() {
            this.css.v = `hsl( ${this.h.val}, ${this.s.val * 100}%, ${this.l.val * 100}%`;
        }
    }
    models.HSL = HSL;
    class Pos {
        x;
        y;
        constructor(value) {
            this.x = new Leaf.Number(value.x);
            this.y = new Leaf.Number(value.y);
        }
    }
    models.Pos = Pos;
})(models || (models = {}));
//  //
var Quest;
(function (Quest) {
    const createBranchClass = (srcproto) => {
        const newproto = {};
        return newproto;
    };
})(Quest || (Quest = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3IxLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMtc3JjL2FwcGxldHMvY29sb3IxLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVyRCxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0FBR3hCLE1BQU07QUFFTixNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsR0FBRyxFQUFFO0lBRTdCLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLEVBQUUsRUFDaEcsTUFBTSxFQUFFLENBQ1IsQ0FBQztJQUVGLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBRSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBRSxDQUFDO0lBRWxGLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBRSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsRUFDckMsRUFBRSxDQUFDLEVBQUUsQ0FBRSxTQUFTLENBQUUsRUFDbEIsRUFBRSxDQUFDLEdBQUcsQ0FBRSxFQUFFLEtBQUssRUFBRSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFDcEYsR0FBRyxDQUNILENBQ0QsQ0FBQztBQUNILENBQUMsQ0FBQTtBQUdELE1BQU0sTUFBTSxHQUFHLEdBQUcsRUFBRTtJQUVuQixNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLHFCQUFxQixFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBRSxDQUFDO0lBQ3hGLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBRSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBRSxDQUFDO0lBRWxGLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FDM0IsQ0FBQztRQUNBLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7UUFDMUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7S0FDOUIsQ0FBQyxDQUNGLENBQUM7SUFFRixPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUUsSUFBSSxDQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBRSxLQUFLLENBQUUsQ0FBRSxDQUFFLENBQUM7QUFDekQsQ0FBQyxDQUFDO0FBRUYsTUFBTSxNQUFNLEdBQUcsQ0FBRSxLQUFzQixFQUFHLEVBQUU7SUFFM0MsTUFBTSxLQUFLLEdBQUcsSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFFLEtBQUssQ0FBRSxDQUFDO0lBQ3hDLEdBQUcsQ0FBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENB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