//const log = console.log;
const log = (...any) => { };
//  //
export class Grazer {
    args;
    get isActive() { return this._isActive; }
    constructor(args) {
        this.args = args;
        document.addEventListener("mouseup", () => this.end());
    }
    _isActive = false;
    current = null;
    // mouse イベント //
    mousedown(ev) {
        log("mouse down");
        if (ev.buttons != this.args.buttons)
            return false;
        this._isActive = true;
        ev.preventDefault();
        return true;
    }
    mouseenter(ev) {
        if (ev.buttons != this.args.buttons)
            this._isActive = false;
        log("mouse enter", ev.buttons, this.args.buttons, this.isActive);
        return this._isActive;
    }
    end() {
        log("end");
        this._isActive = false;
    }
    // touch イベント => マウスイベント変換 //
    initTouch(container) {
        if (container instanceof HTMLElement) {
            container.addEventListener("touchstart", (ev) => this.touchstart(ev), { passive: false });
            container.addEventListener("touchmove", (ev) => this.touchmove(ev), { passive: false });
            container.addEventListener("touchcancel", (ev) => this.touchcancel(ev), { passive: false });
            container.addEventListener("touchend", (ev) => this.touchend(ev), { passive: false });
        }
    }
    touchstart(ev) {
        log("touch start");
        ev.cancelable && ev.preventDefault();
        this.dispatch("mousedown", this.getTouch(ev));
    }
    touchmove(ev) {
        log("touch move");
        this.dispatchEnterLeave(this.getTouch(ev));
    }
    touchcancel(ev) {
        log("touch cancel");
        this.end();
    }
    touchend(ev) {
        log("touch end");
        this.end();
    }
    //
    getTouch(ev) {
        if (ev.touches.length != 1)
            return null;
        return ev.touches[0];
    }
    dispatch(type, touch) {
        if (!touch)
            return;
        const e = document.elementFromPoint(touch.clientX, touch.clientY);
        e && this.dispatchTo(e, type, touch, true);
    }
    /** touchmove イベントから mouseenter / mouseleave イベントを生成 */
    dispatchEnterLeave(touch) {
        if (!touch)
            return;
        const e = document.elementFromPoint(touch.clientX, touch.clientY);
        if (!(e instanceof HTMLElement))
            return;
        /** moves の欠員を検出し mouseleave イベントを生成 */
        const ps = getPathSet(e);
        this.moves.forEach(move => {
            if (!ps.has(move)) {
                this.moves.delete(move);
                this.dispatchTo(move, "mouseleave", touch, false);
            }
        });
        /** moves の追加を検出し mouseenter イベントを生成 */
        if (!this.moves.has(e)) {
            this.moves.add(e);
            this.dispatchTo(e, "mouseenter", touch, false);
        }
    }
    moves = new Set;
    dispatchTo(e, type, touch, bubbles) {
        e?.dispatchEvent(new MouseEvent(type, {
            cancelable: true,
            bubbles,
            buttons: this.args.buttons,
            ...touch
        }));
    }
}
/** Element の parentElement のパスセットを作成
 * mouseenter / mouseleave の検出に使用
*/
const getPathSet = (e) => {
    const set = new Set;
    for (; e; e = e.parentElement)
        set.add(e);
    return set;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhemVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMtc3JjL2FwcGxldHMvZ3JhemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQjtBQUMxQixNQUFNLEdBQUcsR0FBRyxDQUFFLEdBQUksR0FBUyxFQUFHLEVBQUUsR0FBRSxDQUFDLENBQUM7QUFFcEMsTUFBTTtBQUVOLE1BQU0sT0FBTyxNQUFNO0lBSUs7SUFGdkIsSUFBVyxRQUFRLEtBQUssT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUVoRCxZQUF1QixJQUEwQjtRQUExQixTQUFJLEdBQUosSUFBSSxDQUFzQjtRQUVoRCxRQUFRLENBQUMsZ0JBQWdCLENBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBRSxDQUFDO0lBQzFELENBQUM7SUFFUyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ2xCLE9BQU8sR0FBb0IsSUFBSSxDQUFDO0lBRTFDLGdCQUFnQjtJQUVULFNBQVMsQ0FBRSxFQUFlO1FBRWhDLEdBQUcsQ0FBRSxZQUFZLENBQUUsQ0FBQTtRQUNuQixJQUFJLEVBQUUsQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQUcsT0FBTyxLQUFLLENBQUM7UUFFbkQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3BCLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVNLFVBQVUsQ0FBRSxFQUFlO1FBRWpDLElBQUksRUFBRSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU87WUFBSSxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUU5RCxHQUFHLENBQUUsYUFBYSxFQUFFLEVBQUUsQ0FBQyxPQUFPLEVBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFB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