const log2 = console.log;
const log = (...any) => { };
//  //
export class Grazer {
    args;
    get isActive() { return this._isActive; }
    constructor(args) {
        this.args = args;
        document.addEventListener("mouseup", () => this.end());
    }
    _isActive = false;
    current = null;
    // mouse イベント //
    mousedown(ev) {
        log("mouse down");
        if (ev.buttons != this.args.buttons)
            return false;
        this._isActive = true;
        ev.preventDefault();
        return true;
    }
    mouseenter(ev) {
        if (ev.buttons != this.args.buttons)
            this._isActive = false;
        log("mouse enter", ev.buttons, this.args.buttons, this.isActive);
        return this._isActive;
    }
    end() {
        log("end");
        this._isActive = false;
    }
    // touch イベント => マウスイベント変換 //
    initTouch(container) {
        if (container instanceof HTMLElement) {
            container.addEventListener("touchstart", (ev) => this.touchstart(ev), { passive: false });
            container.addEventListener("touchmove", (ev) => this.touchmove(ev), { passive: false });
            container.addEventListener("touchcancel", (ev) => this.touchcancel(ev), { passive: false });
            container.addEventListener("touchend", (ev) => this.touchend(ev), { passive: false });
        }
    }
    touchstart(ev) {
        log("touch start");
        ev.cancelable && ev.preventDefault();
        this.dispatch("mousedown", this.getTouch(ev));
    }
    touchmove(ev) {
        log("touch move");
        this.dispatchEnterLeave(this.getTouch(ev));
    }
    touchcancel(ev) {
        log("touch cancel");
        this.end();
    }
    touchend(ev) {
        log("touch end");
        this.end();
    }
    //
    getTouch(ev) {
        if (ev.touches.length != 1)
            return null;
        return ev.touches[0];
    }
    dispatch(type, touch) {
        if (!touch)
            return;
        const e = document.elementFromPoint(touch.clientX, touch.clientY);
        e && this.dispatchTo(e, type, touch, true);
    }
    /** touchmove イベントから mouseenter / mouseleave イベントを生成 */
    dispatchEnterLeave(touch) {
        if (!touch)
            return;
        const e = document.elementFromPoint(touch.clientX, touch.clientY);
        if (!(e instanceof HTMLElement))
            return;
        /** moves の欠員を検出し mouseleave イベントを生成 */
        const ps = createPathSet(e);
        this.moves.forEach(move => {
            if (!ps.has(move)) {
                this.moves.delete(move);
                this.dispatchTo(move, "mouseleave", touch, false);
            }
        });
        /** moves の追加を検出し mouseenter イベントを生成 */
        if (!this.moves.has(e)) {
            this.moves.add(e);
            this.dispatchTo(e, "mouseenter", touch, false);
        }
    }
    moves = new Set;
    dispatchTo(e, type, touch, bubbles) {
        e?.dispatchEvent(new MouseEvent(type, {
            cancelable: true,
            bubbles,
            buttons: this.args.buttons,
            ...touch
        }));
    }
}
/** Element の parentElement のパスセットを作成
 * mouseenter / mouseleave の検出に使用
*/
const createPathSet = (e) => {
    const set = new Set;
    for (let p = e; p; p = p.parentElement)
        set.add(p);
    const ar = [];
    // for( let p = e ; p; p = p.parentElement ) ar.push( p );
    // log2( "pathSet\n" + ar.map( e => e.nodeName ).join( "\n" ) );
    return set;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhemVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMtc3JjL2FwcGxldHMvZ3JhemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFDekIsTUFBTSxHQUFHLEdBQUcsQ0FBRSxHQUFJLEdBQVMsRUFBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO0FBRXBDLE1BQU07QUFFTixNQUFNLE9BQU8sTUFBTTtJQUlLO0lBRnZCLElBQVcsUUFBUSxLQUFLLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7SUFFaEQsWUFBdUIsSUFBMEI7UUFBMUIsU0FBSSxHQUFKLElBQUksQ0FBc0I7UUFFaEQsUUFBUSxDQUFDLGdCQUFnQixDQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUUsQ0FBQztJQUMxRCxDQUFDO0lBRVMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUNsQixPQUFPLEdBQW9CLElBQUksQ0FBQztJQUUxQyxnQkFBZ0I7SUFFVCxTQUFTLENBQUUsRUFBZTtRQUVoQyxHQUFHLENBQUUsWUFBWSxDQUFFLENBQUE7UUFDbkIsSUFBSSxFQUFFLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTztZQUFHLE9BQU8sS0FBSyxDQUFDO1FBRW5ELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUNwQixPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFTSxVQUFVLENBQUUsRUFBZTtRQUVqQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQUksSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFFOUQsR0FBRyxDQUFFLGFBQWEsRUFBRSxFQUFFLENBQUMsT0FBTyxFQUFHLElBQUks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