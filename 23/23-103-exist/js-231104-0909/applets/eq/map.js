import { Leaf, leaf, ef, Lian, defs } from "../../meh/index.js";
import { sitepub } from "./sitepub_all_utf8.js";
import { Range } from "../../gui/range.js";
const log = console.log;
const clip = (value, min, max) => Math.max(min, Math.min(max, value));
const pxRatio = 1000;
// Model //
var Model;
(function (Model) {
    class Map {
        // パラメータ //
        current = new Leaf(null);
        zoom;
        center;
        //  //
        hover = new Leaf(null);
        hoverInfo = new Leaf.String("");
        currentInfo = new Leaf.String("");
        hoverList = new Lian;
        currentList = new Lian;
        scrollCSS = leaf.string("");
        zoomCSS = leaf.string("");
        // 固定値 //
        lat = { max: 45.5132, min: 24.3413 };
        long = { max: 145.8026, min: 123.7798 };
        //  //
        constructor() {
            const rel = () => this.update();
            this.zoom = new Leaf.Number(5, { rel });
            this.center = new Leaf({ lat: 36.0, long: 139.0 }, { rel });
            this.hover.ref(() => this.updateHover());
            this.current.ref((newItem, oldItem) => this.updateCurrent(newItem, oldItem));
            this.hoverList.add(Site.list[555]);
            this.hoverList.add(Site.list[777]);
            this.hoverList.add(Site.list[999]);
            rel();
        }
        update() {
            const scale = this.zoomScale;
            const tlx = -this.longToPx(this.center.value.long) + "px";
            const tly = -this.latToPx(this.center.value.lat) + "px";
            this.scrollCSS.value = `translate( ${tlx}, ${tly} )`;
            this.zoomCSS.value = `scale( ${scale}, ${scale} )`;
        }
        updateHover() {
            const site = this.hover.value;
            this.hoverInfo.value = Site.info(site);
            site && this.hoverList.add(site);
        }
        updateCurrent(newItem, oldItem) {
            this.currentInfo.value = Site.info(newItem);
            oldItem && (oldItem.selected.value = false);
            newItem && (newItem.selected.value = true);
        }
        cssPos(site) {
            const left = this.longToPx(site.long) + "px";
            const top = this.latToPx(site.lat) + "px";
            return { left, top };
        }
        latToPx(lat) { return (this.lat.max - lat) * pxRatio; }
        longToPx(long) { return (long - this.long.min) * pxRatio; }
        get zoomScale() { return Math.pow(10, this.zoom.value / 5 - 2); } // zoom : 0 ~ 5 ~ 10 => scale : 0.01 ~ 0.1 ~ 1
        get scrollstep() {
            const rt = 1 / this.zoomScale / pxRatio;
            log("scrstep", rt);
            return rt;
        }
    }
    Model.Map = Map;
    //
    class Site {
        src;
        selected = leaf.boolean(false);
        constructor(src) {
            this.src = src.split(",");
        }
        get code() { return this.src[0]; }
        get name() { return this.src[1]; }
        get nameR() { return this.src[2]; }
        get lat() { return Number(this.src[3]); }
        get long() { return Number(this.src[4]); }
        get elev() { return Number(this.src[5]); }
        get depth() { return Number(this.src[6]); }
        static info(site) {
            return site && `${site.code} ${site.name} ${site.nameR}` || "-";
        }
        static list = sitepub.split("\n").map(csv => new Site(csv));
    }
    Model.Site = Site;
    ;
    log("sitecount", Site.list.length);
})(Model || (Model = {}));
// UI //
// . site . //
const { div, h2, h3, textarea, p, span } = ef;
const Site = (site, map) => {
    const { left, top } = map.cssPos(site);
    return div({
        class: ["map-site", { selected: site.selected }],
        style: { left, top },
        acts: {
            mouseover() { map.hover.value = site; },
            mousedown(ev) { map.current.value = site; ev.stopPropagation(); },
        },
        actActs: {
            touchstart(ev) { map.current.value = site; ev.preventDefault(); }
        }
    }, div({ class: "map-site-label" }, site.name));
};
class ScrollWork {
    map;
    // scroll //
    recx;
    recy;
    srcmode = "none";
    touchMon = new Leaf.String("");
    mousemon = new Leaf.String("");
    docmousemon = new Leaf.String("");
    constructor(map) {
        this.map = map;
        this.wheelzoom = map.zoom.value;
        document.addEventListener("mousemove", this.docmousemove, { passive: false });
    }
    mon(name, x, y) {
        this.mousemon.value = `${name} ${x} ${y}`;
    }
    mousedown = (ev) => {
        if (ev.buttons & 1) {
            this.recpos(ev.screenX, ev.screenY, ev);
            this.srcmode = "mouse";
        }
        this.mon("down", ev.screenX, ev.screenY);
    };
    docmousemove = (ev) => {
        this.mon("move", ev.screenX, ev.screenY);
        if (!(ev.buttons & 1))
            this.srcmode = "none";
        if (this.srcmode == "mouse" && ev.buttons & 1)
            this.scroll(ev.screenX, ev.screenY, ev);
        this.docmousemon.value = `move ${ev.screenX} ${ev.screenY} ${ev.buttons}`;
    };
    mouseup = (ev) => {
        this.mon("up  ", ev.screenX, ev.screenY);
    };
    touchstart = (ev) => {
        const t0 = ev.touches[0];
        this.recpos(t0.screenX, t0.screenY, ev);
        this.touchMon.value = `start ${ev.touches.length} ${t0.screenX} ${t0.screenY} }`;
    };
    touchmove = (ev) => {
        const t0 = ev.touches[0];
        this.scroll(t0.screenX, t0.screenY, ev);
        this.touchMon.value = `move  ${ev.touches.length} ${t0.screenX} ${t0.screenY} }`;
    };
    touchend = (ev) => {
        const t0 = ev.touches[0];
        this.touchMon.value = `end   ${ev.touches.length} }`;
    };
    //  //
    recpos(screenX, screenY, ev) {
        this.recx = screenX;
        this.recy = screenY;
        ev.preventDefault();
    }
    scroll(screenX, screenY, ev) {
        const center = this.map.center.value;
        const stepscale = this.map.scrollstep;
        const deltaX = this.delta(screenX, this.recx);
        const deltaY = this.delta(screenY, this.recy);
        this.recpos(screenX, screenY, ev);
        const long = clip(center.long - deltaX * stepscale, this.map.long.min, this.map.long.max);
        const lat = clip(center.lat + deltaY * stepscale, this.map.lat.min, this.map.lat.max);
        this.map.center.value = { lat, long };
    }
    delta(mouse, rec) {
        return rec != null ? (mouse - rec) : 0;
    }
    // zoom //
    wheelzoom;
    wheelMon = new Leaf.String("");
    wheel = (ev) => {
        this.wheelMon.value = `${ev.deltaX} ${ev.deltaY}`;
        const zoom = this.wheelzoom + ev.deltaY * -0.05;
        this.wheelzoom = Math.min(10, Math.max(0, zoom));
        this.map.zoom.value = Math.round(this.wheelzoom);
        ev.preventDefault();
    };
}
// .. ui .. //
const MapFrame = (model, scrzoom) => {
    const content = div({
        class: "map-content",
        style: { transform: model.scrollCSS }
    }, ...Model.Site.list.map(siteInfo => Site(siteInfo, model)));
    const zoomFrame = div({
        class: "map-zoom",
        style: { transform: model.zoomCSS }
    }, content);
    const { mousedown, mouseup, touchstart, touchmove, touchend, wheel } = scrzoom;
    return div({
        class: "map-frame",
        acts: { mouseup, touchend },
        actActs: { wheel, mousedown, touchstart, touchmove, },
    }, div(), div(), div(), zoomFrame);
};
// main ui //
export const Map = () => {
    const model = new Model.Map;
    const lianMon = new Leaf.String("");
    const scrzoom = new ScrollWork(model);
    return div({ class: "map applet" }, h2("EQ Site Map"), div(div({ class: "map-site-info" }, model.currentInfo), MapFrame(model, scrzoom), div({ class: "map-site-info" }, model.hoverInfo), div(Range.UI({ title: "拡大", value: model.zoom, max: 10 }))), div(div("d.mouse", " ", scrzoom.docmousemon), div("mouse", " ", scrzoom.mousemon), div("touch", " ", scrzoom.touchMon), div("wheel", " ", scrzoom.wheelMon)), div(h3("ホバー履歴"), div(
    //defs.ap( model.hoverList, item => { log( item.code ); return span( "span" ) } ),
    defs.ap(model.hoverList, item => item.value.name + " "), defs.ap([1, 2, 3], item => span(item))), textarea({ props: { value: lianMon }, style: { width: "100%", height: "20em", lineHeight: "1.4em" } })));
};
//# sourceMappingURL=data:application/json;base64,