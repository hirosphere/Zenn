import { leaf, Lian, ef, ap, } from "../meh/index.js";
import * as eki from "../raildata/eki.js";
const log = console.log;
const lp = ap;
// Model //
const lines = eki.lines;
var Model;
(function (Model) {
    class App {
        lines = ["埼京線", "京浜東北線", "総武線各駅停車", "中央線"].map(name => new Line(name));
        history = Lian.create();
        evmon = leaf.string("evmon");
        shuffle() {
        }
    }
    Model.App = App;
    class Line {
        stations = new Lian();
        src;
        constructor(name) {
            this.src = eki.lines[name];
            this.src && this.stations.setValues(this.src.stations);
            log("LineModel", name);
        }
        get name() { return this.src?.name ?? "-.--."; }
    }
    Model.Line = Line;
})(Model || (Model = {}));
const arrnd = (ar) => Math.floor(Math.random() * ar.length);
// UI //
const { div, h2, h3, span, button, b } = ef;
export const Lian1Applet = (app = new Model.App) => {
    const lp = ap;
    document.addEventListener("mouseup", () => app.evmon.set("mouseup"));
    return div({ class: "applet lian-1" }, h2("Lian-1 Applet"), div({ class: "applet-body " }, div({ class: "cols-3", actActs: { dblclick(ev) { app.evmon.set("dblclk"); } } }, div({ class: "stations" }, ap(app.lines, line => Line(app, line)))), div(app.evmon), div({ class: "cols-3" }, h3("椅子取 history"), div({ acts: { click() { app.history.clear(); } } }, button("全消去")), div({ class: "stations" }, History(app)))));
};
const Line = (app, line) => {
    const action = (station) => app.history.add(station, 0);
    return span({ class: "line" }, b(line.name), lp(line.stations, item => button({ acts: { mouseover: () => action(item.value) } }, item.value.name)));
};
const History = (mo) => {
    return span({ class: "line" }, lp(mo.history, item => {
        const act = () => mo.history.remove(item);
        return button({ acts: { mouseleave: act } }, `${item.value.name}`);
    }));
};
export const Lian1 = { UI: Lian1Applet };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlhbi0xLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMtc3JjL2FwcGxldHMvbGlhbi0xLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEtBQUssR0FBRyxNQUFNLG9CQUFvQixDQUFDO0FBQzFDLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFDeEIsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBRWQsV0FBVztBQUVYLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7QUFFeEIsSUFBVSxLQUFLLENBNkJkO0FBN0JELFdBQVUsS0FBSztJQUVkLE1BQWEsR0FBRztRQUVmLEtBQUssR0FBRyxDQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssQ0FBRSxDQUFDLEdBQUcsQ0FBRSxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxDQUFFLElBQUksQ0FBRSxDQUFFLENBQUM7UUFDN0QsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQW1CLENBQUM7UUFFekQsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUUsT0FBTyxDQUFFLENBQUM7UUFFL0IsT0FBTztRQUVQLENBQUM7S0FDRDtJQVZZLFNBQUcsTUFVZixDQUFBO0lBRUQsTUFBYSxJQUFJO1FBRUEsUUFBUSxHQUFHLElBQUksSUFBSSxFQUFtQixDQUFDO1FBQy9DLEdBQUcsQ0FBYztRQUV6QixZQUFhLElBQWE7WUFFekIsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFFLElBQUksQ0FBRSxDQUFDO1lBQzdCLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUUs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